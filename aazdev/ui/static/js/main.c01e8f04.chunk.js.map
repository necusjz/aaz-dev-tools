{"version":3,"sources":["components/TreeView/CheckNode.module.css","components/TreeView/App.module.css","App.tsx","theme.tsx","withRoot.tsx","components/AppAppBar.tsx","components/PageLayout.tsx","views/home/HomePage.tsx","views/workspace/WorkspacePage.tsx","views/workspace/WorkspaceSelector.tsx","views/workspace/WorkspaceInstruction.tsx","components/EditorPageLayout.tsx","views/workspace/WSEditorSwaggerPicker.tsx","views/workspace/WSEditorToolBar.tsx","views/workspace/WSEditorCommandTree.tsx","views/workspace/WSEditorTheme.tsx","views/workspace/WSEditorCommandGroupContent.tsx","views/workspace/WSEditorCommandArgumentsContent.tsx","views/workspace/WSEditorCommandContent.tsx","views/workspace/WSEditor.tsx","views/commands/CommandsPage.tsx","views/generation/GenerationPage.tsx","views/generation/CLIModuleSelector.tsx","views/generation/GenerationInstruction.tsx","views/generation/GenerationProfileTab.tsx","components/TreeView/TypeIcon.tsx","components/TreeView/CheckNode.tsx","views/generation/GenerationCommandTree.tsx","views/generation/GenerationModuleEditorToolBar.tsx","views/generation/GenerationModuleEditor.tsx","views/documentation/DocumentsPage.tsx","views/documentation/DocumentsTree.tsx","views/documentation/DocumentsDisplay.tsx","index.tsx"],"names":["module","exports","App","React","rawTheme","createTheme","palette","primary","light","main","dark","secondary","info","warning","error","red","success","green","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontHeader","color","text","fontWeight","theme","background","default","common","white","placeholder","grey","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","body1","body2","withRoot","Component","props","ThemeProvider","CssBaseline","AppAppBar","AppBar","position","Toolbar","sx","justifyContent","height","Box","flex","display","alignItems","Link","variant","underline","href","this","pageName","p","ml","PageContainer","styled","Container","left","right","top","bottom","flexDirection","Background","backgroundSize","backgroundRepeat","zIndex","PageLayout","children","MiddlePadding","StepperHeaderTypography","Typography","StepContentTypography","activeStep","setActiveStep","handleStep","step","flexGrow","flexShrink","gutterBottom","width","mr","Stepper","nonLinear","orientation","Step","StepButton","onClick","StepContent","target","align","WorkspacePage","filter","createFilterOptions","defaultPlane","WorkspaceSelector","loadWorkspaces","axios","get","then","res","options","data","map","option","name","lastModified","Date","updated","url","plane","folder","setState","catch","err","console","handleDialogSubmit","event","currentTarget","checkValidity","workspaceName","state","createDialogValue","post","workspace","value","setTimeout","onValueUpdated","handleDialogClose","response","openDialog","window","location","Autocomplete","id","autoHighlight","onChange","newValue","inputValue","filterOptions","params","filtered","findIndex","e","push","title","getOptionLabel","renderOption","labelName","component","selectOnFocus","clearOnBlur","renderInput","TextField","label","inputProps","autoComplete","Dialog","open","onClose","onSubmit","DialogTitle","DialogContent","autoFocus","margin","required","type","DialogActions","WorkspaceInstruction","EditorPageLayout","MiddlePadding2","UpdateOptions","WSEditorSwaggerPicker","handleClose","handleSubmit","addSwagger","loadSwaggerModules","v","preState","moduleOptions","moduleOptionsCommonPrefix","preModuleName","loadResourceProviders","moduleUrl","selectedResourceProvider","length","resourceProviderOptions","resourceProviderOptionsCommonPrefix","onResourceProviderUpdate","message","loadWorkspaceResources","existingResources","Set","Array","isArray","swagger","slice","replace","split","forEach","resource","add","loadResources","resourceProviderUrl","loading","versionResourceIdMap","versionOptions","resourceMap","versions","version","sort","a","b","localeCompare","reverse","selectVersion","onVersionUpdate","selectedResources","selectedVersion","selectedModule","updateOption","resources","resourceId","undefined","operations","find","opName","toLowerCase","update_by","requestBody","onModuleSelectorUpdate","moduleValueUrl","resourceOptions","has","onUpdateOptionUpdate","onResourceItemClick","delete","updateOptions","IconButton","edge","alignContent","marginRight","ListSubheader","commonPrefix","onValueUpdate","Button","disabled","size","List","dense","subheader","labelId","ListItem","disablePadding","ListItemButton","ListItemIcon","Checkbox","checked","tabIndex","disableRipple","ListItemText","primaryTypographyProps","Backdrop","drawer","CircularProgress","SwaggerItemSelector","WSEditorToolBar","onHomePage","onGenerate","Tooltip","HeaderTypography","WSEditorCommandTree","onNodeSelected","nodeIds","onSelected","onNodeToggle","onToggle","commandTreeNodes","selected","onAdd","expanded","renderNode","node","nodeName","names","TreeItem","nodeId","leaves","leaf","leafName","renderLeaf","nodes","subNode","mt","TreeView","defaultCollapseIcon","defaultExpandIcon","onNodeSelect","overflowY","CardTitleTypography","NameTypography","ShortHelpTypography","fontStyle","ShortHelpPlaceHolderTypography","LongHelpTypography","StableTypography","PreviewTypography","ExperimentalTypography","SmallPreviewTypography","SmallExperimentalTypography","SubtitleTypography","WSEditorCommandGroupContent","onCommandGroupDialogDisplay","displayCommandGroupDialog","onCommandGroupDeleteDialogDisplay","displayCommandGroupDeleteDialog","handleCommandGroupDialogClose","newCommandGroup","onUpdateCommandGroup","handleCommandGroupDeleteDialogClose","deleted","workspaceUrl","commandGroup","join","shortHelp","help","short","longHelp","lines","stage","Card","elevation","CardContent","mb","line","idx","CardActions","disableElevation","canDelete","CommandGroupDeleteDialog","updating","setUpdating","disableEscapeKeyDown","dividers","LinearProgress","nodeUrl","CommandGroupDialog","handleModify","trim","n","invalidText","piece","test","l","patch","cmdGroup","DecodeResponseCommandGroup","Alert","severity","InputLabel","shrink","font","RadioGroup","row","FormControlLabel","control","Radio","fullWidth","helperText","multiline","ArgumentNavigation","useState","argIdxStack","setArgIdxStack","getArgProps","selectedArgBase","startsWith","clsArgDefineMap","clsName","args","itemProps","item","getSelectedArg","stack","selectedArg","i","argVar","var","arg","useEffect","commandUrl","pop","handleSelectSubArg","subArgVar","subArg","argIdx","displayKey","argType","handleChangeArgIdStack","end","Fragment","ArgNavBar","onChangeArgIdStack","ArgumentReviewer","depth","buildArgumentReviewer","ArgumentPropsReviewer","onSelectSubArg","argProps","buildArgumentPropsReviewer","NavBarItemTypography","NavBarItemHightLightedTypography","ButtonBase","index","spliceArgOptionsString","ArgNameTypography","ArgTypeTypography","ArgRequiredTypography","argOptionsString","buildArgOptionsString","PropArgTypeTypography","PropRequiredTypography","ArgGroupTypography","PropArgOptionTypography","PropArgShortSummeryTypography","groupArgs","groupName","group","groups","buildArg","decodeArgEnum","items","hide","decodeArgEnumItem","decodeArgBase","argBase","clsDefineMap","enum","resSubArg","subArgParse","decodeArg","additionalProps","Error","itemArgBaseParse","argBaseType","cls","refCommands","decodeArgHelp","blank","idPart","singularOptions","WSEditorCommandArgumentsContent","setArgs","setClsArgDefineMap","responseCommand","argGroups","argGroup","resArg","argDecode","decodeResponse","commandPrefix","ExampleCommandHeaderTypography","ExampleCommandBodyTypography","ExampleEditTypography","ExampleAccordionSummary","expandIcon","transform","WSEditorCommandContent","onCommandDialogDisplay","displayCommandDialog","onCommandDeleteDialogDisplay","displayCommandDeleteDialog","handleCommandDialogClose","newCommand","onUpdateCommand","handleCommandDeleteDialogClose","onExampleDialogDisplay","displayExampleDialog","exampleIdx","handleExampleDialogClose","command","examples","onDoubleClick","example","Accordion","startIcon","AccordionDetails","paddingTop","commands","exampleCommand","cmdIdx","CommandDeleteDialog","relatedCommands","setRelatedCommands","promisesAll","btoa","Promise","all","responses","DecodeResponseCommand","cmd","cmdNames","cmdName","CommandDialog","leafUrl","ExampleCommandTypography","ExampleDialog","onUpdateExamples","handleDelete","exampleCommands","cmdLine","newExample","handleAdd","onModifyExampleCommand","onRemoveExampleCommand","onAddExampleCommand","isAdd","Input","startAdornment","InputAdornment","swaggerResourcePickerTransition","breakpoints","up","ref","Slide","direction","WSEditor","loadWorkspace","preSelected","commandMap","commandGroupMap","buildCommand","command_1","buildCommandGroup","commandGroup_1","subLeave","commandGroups","name_1","a_1","b_1","commandTree","key","cmdGroups","a_2","b_2","parts","id_1","parts_1","newExpanded","groupId","expandedId","expandedIdParts","showSwaggerResourcePicker","handleSwaggerResourcePickerClose","handleBackToHomepage","handleGenerate","showExportDialog","handleGenerationClose","exported","handleCommandTreeSelect","handleCommandGroupUpdate","handleCommandUpdate","handleCommandTreeToggle","expandedIds","expandId","Drawer","boxSizing","fullScreen","TransitionComponent","WSEditorExportDialog","setInvalidText","WSEditorWrapper","useParams","CommandsPage","GenerationPage","CLIModuleSelector","loadModules","repo","moduleName","SpacePadding","GenerationInstruction","GenerationProfileTab","profiles","Tabs","borderRight","borderColor","profile","Tab","TypeIcon","CheckNode","indent","className","styles","root","isSelected","style","paddingInlineStart","expandIconWrapper","isOpen","droppable","stopPropagation","onSelect","labelGridItem","FormControl","m","minWidth","NativeSelect","defaultValue","versionIndex","currVersion","GenerationCommandTree","treeData","selectedNodes","tree","rootId","render","onDrop","classes","treeRoot","dropTarget","initialOpen","GenerationModuleEditorToolBar","GenerationModuleEditor","initialModuleEditor","loadCommandTree","combinedData","parseCommandTree","initialTreeData","loadLocalCommands","repoName","toBeGenerated","isGenerated","parentIndex","resolve","totalPromise","Object","keys","currentIndex","treeNode","parent","commandGroupIndex","commandGroupPromise","commandPromises","commandName","getNamePath","namePath","currentId","currNode","Number","unshift","getProfileEntry","profileName","profileIndex","currentPointer","versionName","indexOf","refreshVersionInfo","insertLeaf","path","hasOwnProperty","element","log","removeNodes","showGenerateDialog","generated","handleProfileChange","handleSelect","prepareNodes","currentNode","handleVersionChange","currentVersion","changeNode","currentPath","GenerationModuleEditorDialog","put","GenerationModuleEditorWrapper","DocumentsPage","DocumentsTree","DecodeResponseDocumentTreeNode","file","pages","DocumentsDisplay","setSelected","documentTree","setDocumentTree","markDownContent","setMarkDownContent","setExpanded","handleTreeSelect","status","content","loadDocument","docId","loadDocumentIndex","dt","iterNode","appBar","pt","pb","remarkPlugins","remarkGfm","components","PComponent","H1Component","H2Component","H3Component","ul","listStyleType","li","code","match","exec","inline","paddingLeft","paddingRight","prismStyle","language","PreTag","img","alt","src","maxWidth","table","TableContainer","Table","thead","TableHead","tr","TableRow","border","th","TableCell","td","marginTop","DocumentsDisplayWrapper","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c01e8f04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CheckNode_root__2Mg_B\",\"isSelected\":\"CheckNode_isSelected__27HDN\",\"expandIconWrapper\":\"CheckNode_expandIconWrapper__mPDlw\",\"isOpen\":\"CheckNode_isOpen__4aeoc\",\"labelGridItem\":\"CheckNode_labelGridItem__3ZJJU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2_INw\",\"treeRoot\":\"App_treeRoot__2j69g\",\"draggingSource\":\"App_draggingSource__2WxdQ\",\"dropTarget\":\"App_dropTarget__1-8uu\",\"root\":\"App_root__P5XCL\"};","// import React, { Component } from \"react\";\r\nimport { Routes, Route, useParams, Outlet} from \"react-router-dom\";\r\nimport * as React from 'react';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Outlet />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import { createTheme } from \"@mui/material\";\r\nimport { red, green, grey } from \"@mui/material/colors\";\r\n\r\nconst rawTheme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#69696a',\r\n            main: '#28282a',\r\n            dark: '#1e1e1f',\r\n        },\r\n        secondary: {\r\n            light: '#fff5f8',\r\n            main: '#ff3366',\r\n            dark: '#e62958',\r\n        },\r\n        info: {\r\n            light: '#cccfff',\r\n            main: '#5d64cf',\r\n            dark: '#464c99',\r\n        },\r\n        warning: {\r\n            main: '#ffc071',\r\n            dark: '#ffb25e',\r\n        },\r\n        error: {\r\n            light: red[50],\r\n            main: red[500],\r\n            dark: red[700],\r\n        },\r\n        success: {\r\n            light: green[50],\r\n            main: green[500],\r\n            dark: green[700],\r\n        },\r\n    },\r\n    typography: {\r\n        fontFamily: \"'Work Sans', sans-serif\",\r\n        fontSize: 14,\r\n        fontWeightLight: 300, // Work Sans\r\n        fontWeightRegular: 400, // Work Sans\r\n        fontWeightMedium: 700, // Roboto Condensed\r\n    },\r\n});\r\n\r\nconst fontHeader = {\r\n    color: rawTheme.palette.text.primary,\r\n    fontWeight: rawTheme.typography.fontWeightMedium,\r\n    fontFamily: \"'Roboto Condensed', sans-serif\",\r\n};\r\n\r\nconst theme = {\r\n    ...rawTheme,\r\n    palette: {\r\n        ...rawTheme.palette,\r\n        background: {\r\n            ...rawTheme.palette.background,\r\n            default: rawTheme.palette.common.white,\r\n            placeholder: grey[200],\r\n        },\r\n    },\r\n    typography: {\r\n        ...rawTheme.typography,\r\n        fontHeader,\r\n        h1: {\r\n            ...rawTheme.typography.h1,\r\n            ...fontHeader,\r\n            letterSpacing: 0,\r\n            fontSize: 60,\r\n        },\r\n        h2: {\r\n            ...rawTheme.typography.h2,\r\n            ...fontHeader,\r\n            fontSize: 48,\r\n        },\r\n        h3: {\r\n            ...rawTheme.typography.h3,\r\n            ...fontHeader,\r\n            fontSize: 42,\r\n        },\r\n        h4: {\r\n            ...rawTheme.typography.h4,\r\n            ...fontHeader,\r\n            fontSize: 36,\r\n        },\r\n        h5: {\r\n            ...rawTheme.typography.h5,\r\n            fontSize: 20,\r\n            fontWeight: rawTheme.typography.fontWeightLight,\r\n        },\r\n        h6: {\r\n            ...rawTheme.typography.h6,\r\n            ...fontHeader,\r\n            fontSize: 18,\r\n            fontWeight: rawTheme.typography.fontWeightRegular,\r\n        },\r\n        subtitle1: {\r\n            ...rawTheme.typography.subtitle1,\r\n            fontSize: 18,\r\n        },\r\n        body1: {\r\n            ...rawTheme.typography.body1,\r\n            fontWeight: rawTheme.typography.fontWeightRegular,\r\n            fontSize: 16,\r\n        },\r\n        body2: {\r\n            ...rawTheme.typography.body2,\r\n            fontSize: 14,\r\n        },\r\n    }\r\n}\r\n\r\nexport default theme;\r\n","import * as React from 'react';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport theme from './theme';\r\n\r\nexport default function withRoot<P>(Component: React.ComponentType<P>) {\r\n  function WithRoot(props: P) {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n        <CssBaseline />\r\n        <Component {...props} />\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n\r\n  return WithRoot;\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\nimport { AppBar, Toolbar } from '@mui/material';\r\nimport theme from '../theme';\r\n\r\n\r\n\r\ntype AppAppBarProps = {\r\n    pageName: string | null,\r\n};\r\n\r\n\r\nclass AppAppBar extends React.Component<AppAppBarProps> {\r\n\r\n    constructor(props: AppAppBarProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <AppBar position='fixed'>\r\n                    <Toolbar sx={{ justifyContent: \"space-between\", height: 64 }}>\r\n                        <Box sx={{ flex: 1, display: 'flex', justifyContent: \"flex-start\", alignItems: \"center\"}} >\r\n                        <Link\r\n                            variant=\"h6\"\r\n                            underline=\"none\"\r\n                            color=\"inherit\"\r\n                            \r\n                            href=\"/?#/HomePage\"\r\n                            fontWeight={\r\n                                this.props.pageName == \"HomePage\" ? \r\n                                theme.typography.fontWeightMedium : \r\n                                theme.typography.fontWeightLight\r\n                            }\r\n                        >\r\n                            {'Home'}\r\n                        </Link>\r\n                        <Box sx={{ p: 4}}/>\r\n                        <Link\r\n                            variant=\"h6\"\r\n                            underline=\"none\"\r\n                            color=\"inherit\"\r\n                            href=\"/?#/Workspace\"\r\n                            fontWeight={\r\n                                this.props.pageName == \"Workspace\" ? \r\n                                theme.typography.fontWeightMedium : \r\n                                theme.typography.fontWeightLight\r\n                            }\r\n                        >\r\n                            {'Workspace'}\r\n                        </Link>\r\n                        {/* <Box sx={{ p: 4}}/>\r\n                        <Link\r\n                            variant=\"h6\"\r\n                            underline=\"none\"\r\n                            color=\"inherit\"\r\n                            href=\"/?#/Commands\"\r\n                            fontWeight={\r\n                                this.props.pageName == \"Commands\" ? \r\n                                theme.typography.fontWeightMedium : \r\n                                theme.typography.fontWeightLight\r\n                            }\r\n                        >\r\n                            {'Commands'}\r\n                        </Link> */}\r\n                        <Box sx={{ p: 4}}/>\r\n                        <Link\r\n                            variant=\"h6\"\r\n                            underline=\"none\"\r\n                            color=\"inherit\"\r\n                            href=\"/?#/Generation\"\r\n                            fontWeight={\r\n                                this.props.pageName == \"Generation\" ? \r\n                                theme.typography.fontWeightMedium : \r\n                                theme.typography.fontWeightLight\r\n                            }\r\n                        >\r\n                            {'CLI'}\r\n                        </Link>\r\n                        </Box>\r\n                        \r\n                        <Box sx={{ flex: 1, display: 'flex', justifyContent: 'flex-end' }}>\r\n                            <Link\r\n                                color=\"inherit\"\r\n                                variant=\"h6\"\r\n                                underline=\"none\"\r\n                                href=\"/?#/Documents\"\r\n                                fontWeight={\r\n                                    this.props.pageName == \"Documents\" ?\r\n                                    theme.typography.fontWeightMedium : \r\n                                    theme.typography.fontWeightLight\r\n                                }\r\n                                sx={{\r\n                                    fontSize: 16,\r\n                                    color: 'common.white',\r\n                                    ml: 3,\r\n                                }}\r\n                            >\r\n                                {'Docs'}\r\n                            </Link>\r\n                        </Box>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { AppAppBar };","import { Container, styled, Theme, Toolbar } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\n// import { SxProps } from '@mui/system';\r\nimport * as React from 'react';\r\n\r\nconst PageContainer = styled(Container)(({theme}) => ({\r\n    color: theme.palette.common.white,\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 64,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    alignItems: 'stretch',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n}));\r\n\r\n\r\nconst Background = styled(Box)({\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    zIndex: -2,\r\n});\r\n\r\n\r\nexport default function PageLayout(\r\n    props: React.HTMLAttributes<HTMLDivElement>\r\n) {\r\n    const { children } = props;\r\n\r\n    return (\r\n        <React.Fragment >\r\n            <PageContainer>\r\n                {children}\r\n            </PageContainer>\r\n            <Background/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Typography, Box, Link, Stepper, Step, StepButton, StepLabel, StepContent, TypographyProps } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport withRoot from '../../withRoot';\r\nimport { AppAppBar } from '../../components/AppAppBar';\r\nimport PageLayout from '../../components/PageLayout';\r\n\r\n\r\nconst MiddlePadding = styled(Box)(({ theme }) => ({\r\n    height: '6vh'\r\n}));\r\n\r\n\r\nconst StepperHeaderTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\r\n    color: theme.palette.primary.main,\r\n    fontFamily: \"'Work Sans', sans-serif\",\r\n    fontSize: 24,\r\n    fontWeight: 600,\r\n}))\r\n\r\nconst StepContentTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\r\n    color: theme.palette.primary.main,\r\n    fontFamily: \"'Work Sans', sans-serif\",\r\n    fontSize: 14,\r\n    fontWeight: 400,\r\n}))\r\n\r\n\r\nfunction HomePage() {\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n    const handleStep = (step: number) => () => {\r\n        setActiveStep(step);\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppAppBar pageName={'HomePage'} />\r\n            <PageLayout>\r\n                <Box sx={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    flexDirection: 'column',\r\n                    justifyContent: 'center',\r\n                }}>\r\n                    <Box sx={{ flexGrow: 3 }} />\r\n                    <Box sx={{\r\n                        flexGrow: 3,\r\n                        flexShrink: 0,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        flexDirection: 'column'\r\n                    }}>\r\n                        <Typography variant='h2' gutterBottom>\r\n                            Welcome to\r\n                        </Typography>\r\n                        <Typography variant='h2' gutterBottom>\r\n                            AAZ Development Tool\r\n                        </Typography>\r\n                        <MiddlePadding />\r\n\r\n                        <Box sx={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            alignItems: \"flex-start\",\r\n                            justifyContent: \"center\"\r\n                        }}>\r\n                            <Box sx={{\r\n                                width: 350,\r\n                                display: \"flex\",\r\n                                flexDirection: \"row-reverse\",\r\n                                mr: 3\r\n                            }}>\r\n\r\n                                <StepperHeaderTypography gutterBottom>\r\n                                    Getting Started\r\n                                </StepperHeaderTypography>\r\n                            </Box>\r\n\r\n                            <Box sx={{ width: 450, ml: 3 }}>\r\n                                <Stepper nonLinear activeStep={activeStep} orientation=\"vertical\">\r\n                                    <Step>\r\n                                        <StepButton color=\"inherit\" onClick={handleStep(0)}>\r\n                                            {\"Introduce\"}\r\n                                        </StepButton>\r\n                                        <StepContent>\r\n                                            <StepContentTypography>\r\n                                                {\"AAZDev is a tool that helps Azure CLI developers generate Atomic CLI commands from REST API Specifications.\"}\r\n                                            </StepContentTypography>\r\n                                            <StepContentTypography>\r\n                                                {\"Go to \"}\r\n                                                <Link\r\n                                                    href=\"/?#/Documents\"\r\n                                                    // align=\"center\"\r\n                                                    underline=\"always\"\r\n                                                    target=\"_blank\"\r\n                                                >Introduction</Link>\r\n                                                {\" for more details.\"}\r\n                                            </StepContentTypography>\r\n                                        </StepContent>\r\n                                    </Step>\r\n                                    <Step>\r\n                                        <StepButton color=\"inherit\" onClick={handleStep(1)}>\r\n                                            {\"Prepare Swagger\"}\r\n                                        </StepButton>\r\n                                        <StepContent>\r\n                                            <StepContentTypography>\r\n                                                {\"The definition of API in swagger is required before using AAZDev tool.\"}\r\n                                            </StepContentTypography>\r\n                                            <StepContentTypography>\r\n                                                {\"Please make sure the API specs has been defined in \"}\r\n                                            </StepContentTypography>\r\n                                            <StepContentTypography>\r\n                                                <Link\r\n                                                    href=\"https://github.com/Azure/azure-rest-api-specs\"\r\n                                                    // align=\"center\"\r\n                                                    underline=\"always\"\r\n                                                    target=\"_blank\"\r\n                                                >azure-rest-api-specs</Link>\r\n                                                {\" repo or \"}\r\n                                                <Link\r\n                                                    href=\"https://github.com/Azure/azure-rest-api-specs-pr\"\r\n                                                    // align=\"center\"\r\n                                                    underline=\"always\"\r\n                                                    target=\"_blank\"\r\n                                                >azure-rest-api-specs-pr</Link>\r\n                                                {\" repo.\"}\r\n                                            </StepContentTypography>\r\n                                        </StepContent>\r\n                                    </Step>\r\n                                    <Step>\r\n                                        <StepButton color=\"inherit\" onClick={handleStep(2)}>\r\n                                            {\"Build Command Models\"}\r\n                                        </StepButton>\r\n                                        <StepContent>\r\n                                            <StepContentTypography>\r\n                                                {\"Model editors can help you build command models.\"}\r\n                                            </StepContentTypography>\r\n                                            <StepContentTypography>\r\n                                                {\"To build command models from swagger,\"}\r\n                                            </StepContentTypography>\r\n                                            <StepContentTypography>\r\n                                                {\"please use \"}\r\n                                                <Link\r\n                                                    href=\"/?#/Workspace\"\r\n                                                    align=\"center\"\r\n                                                    underline=\"always\"\r\n                                                >Workspace</Link>\r\n                                                {\" editor.\"}\r\n                                            </StepContentTypography>\r\n                                        </StepContent>\r\n                                    </Step>\r\n                                    <Step>\r\n                                        <StepButton color=\"inherit\" onClick={handleStep(3)}>\r\n                                            {\"Generate CLI Code\"}\r\n                                        </StepButton>\r\n                                        <StepContent>\r\n                                            <StepContentTypography>\r\n                                                {\"To convert command models to CLI code,\"}\r\n                                            </StepContentTypography>\r\n                                            <StepContentTypography>\r\n                                                {\"please use \"}\r\n                                                <Link\r\n                                                    href=\"/?#/Generation\"\r\n                                                    align=\"center\"\r\n                                                    underline=\"always\"\r\n                                                >CLI</Link>\r\n                                                {\" generators.\"}\r\n                                            </StepContentTypography>\r\n                                        </StepContent>\r\n                                    </Step>\r\n                                </Stepper>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box sx={{ flexGrow: 5 }} />\r\n                </Box>\r\n            </PageLayout>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withRoot(HomePage);\r\n","import * as React from 'react';\r\nimport withRoot from '../../withRoot';\r\nimport { Outlet } from 'react-router';\r\n\r\nclass WorkspacePage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Outlet />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRoot(WorkspacePage);\r\n","import { Autocomplete, createFilterOptions, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport axios from 'axios';\r\nimport * as React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { Url } from 'url';\r\n\r\n\r\ninterface Workspace {\r\n    name: string,\r\n    plane: string | null,\r\n    lastModified: Date | null,\r\n    url: Url | null,\r\n    folder: string | null,\r\n}\r\n\r\ninterface WorkspaceSelectorProps {\r\n    name: string,\r\n}\r\n\r\ninterface WorkspaceSelectorState {\r\n    options: any[],\r\n    value: Workspace | null,\r\n    openDialog: boolean,\r\n    createDialogValue: Workspace\r\n    // dialogValidated: boolean\r\n}\r\n\r\ninterface InputType {\r\n    inputValue: string,\r\n    title: string,\r\n}\r\n\r\nconst filter = createFilterOptions<Workspace | InputType>();\r\n\r\nconst defaultPlane = \"mgmt-plane\"\r\n\r\nclass WorkspaceSelector extends React.Component<WorkspaceSelectorProps, WorkspaceSelectorState> {\r\n\r\n    constructor(props: WorkspaceSelectorProps) {\r\n        super(props);\r\n        this.state = {\r\n            options: [],\r\n            value: null,\r\n            openDialog: false,\r\n            createDialogValue: {\r\n                name: \"\",\r\n                plane: null,\r\n                lastModified: null,\r\n                url: null,\r\n                folder: null,\r\n            },\r\n            // dialogValidated: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadWorkspaces();\r\n    }\r\n\r\n    loadWorkspaces = () => {\r\n        axios.get(\"/AAZ/Editor/Workspaces\")\r\n            .then((res) => {\r\n                let options = res.data.map((option: any) => {\r\n                    return {\r\n                        name: option.name,\r\n                        lastModified: new Date(option.updated * 1000),\r\n                        url: option.url,\r\n                        plane: option.plane,\r\n                        folder: option.folder\r\n                    }\r\n                });\r\n                this.setState({\r\n                    options: options\r\n                })\r\n            })\r\n            .catch((err) => console.error(err));\r\n    }\r\n\r\n    handleDialogSubmit = (event: any) => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === true) {\r\n            const workspaceName = this.state.createDialogValue.name\r\n            const plane = this.state.createDialogValue.plane\r\n            axios.post('/AAZ/Editor/Workspaces', {\r\n                name: workspaceName,\r\n                plane: plane,\r\n            })\r\n                .then((res) => {\r\n                    let workspace = res.data;\r\n                    let value = {\r\n                        name: workspace.name,\r\n                        lastModified: new Date(workspace.updated * 1000),\r\n                        url: workspace.url,\r\n                        plane: workspace.plane,\r\n                        folder: workspace.folder\r\n                    }\r\n                    setTimeout(() => {\r\n                        this.onValueUpdated(value);\r\n                    })\r\n                    this.handleDialogClose();\r\n                })\r\n                .catch(error => {\r\n                    console.error(error.response);\r\n                })\r\n        }\r\n    }\r\n\r\n    handleDialogClose = () => {\r\n        this.setState({\r\n            createDialogValue: {\r\n                name: \"\",\r\n                plane: null,\r\n                lastModified: null,\r\n                url: null,\r\n                folder: null,\r\n            },\r\n            openDialog: false,\r\n            // dialogValidated: false,\r\n        })\r\n    }\r\n\r\n    onValueUpdated = (value: any) => {\r\n        this.setState({\r\n            value: value\r\n        });\r\n        if (value.url) {\r\n            window.location.href = `/?#/workspace/${value.name}`\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { options, value, openDialog, createDialogValue } = this.state\r\n        const { name } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <Autocomplete\r\n                    id=\"workspace-select\"\r\n                    value={value}\r\n                    sx={{ width: 280 }}\r\n                    options={options}\r\n                    autoHighlight\r\n                    onChange={(event, newValue: any) => {\r\n                        if (typeof newValue === 'string') {\r\n                            // timeout to avoid instant validation of the dialog's form.\r\n                            setTimeout(() => {\r\n                                this.setState({\r\n                                    openDialog: true,\r\n                                    createDialogValue: {\r\n                                        name: newValue,\r\n                                        plane: defaultPlane,\r\n                                        lastModified: null,\r\n                                        url: null,\r\n                                        folder: null,\r\n                                    }\r\n                                })\r\n                            });\r\n                        } else if (newValue && newValue.inputValue) {\r\n                            this.setState({\r\n                                openDialog: true,\r\n                                createDialogValue: {\r\n                                    name: newValue.inputValue,\r\n                                    plane: defaultPlane,\r\n                                    lastModified: null,\r\n                                    url: null,\r\n                                    folder: null,\r\n                                }\r\n                            })\r\n                        } else {\r\n                            this.onValueUpdated(newValue);\r\n                        }\r\n                    }}\r\n                    filterOptions={(options, params: any) => {\r\n                        const filtered = filter(options, params);\r\n                        if (params.inputValue !== '' && -1 === options.findIndex((e) => e.name === params.inputValue)) {\r\n                            filtered.push({\r\n                                inputValue: params.inputValue,\r\n                                title: `Create \"${params.inputValue}\"`,\r\n                            });\r\n                        }\r\n                        return filtered;\r\n                    }}\r\n                    getOptionLabel={(option) => {\r\n                        if (typeof option === \"string\") {\r\n                            return option;\r\n                        }\r\n                        if (option.title) {\r\n                            return option.title;\r\n                        }\r\n                        return option.name;\r\n                    }}\r\n                    renderOption={(props, option) => {\r\n                        let labelName = (option && option.title) ? option.title : option.name;\r\n                        return (\r\n                            <Box component='li'\r\n                                {...props}\r\n                            >\r\n                                {labelName}\r\n                            </Box>\r\n                        )\r\n                    }}\r\n                    selectOnFocus\r\n                    clearOnBlur\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            label={name}\r\n                            inputProps={{\r\n                                ...params.inputProps,\r\n                                autoComplete: 'new-password', // disable autocomplete and autofill\r\n                            }}\r\n                        />\r\n                    )}\r\n                />\r\n                <Dialog open={openDialog} onClose={this.handleDialogClose}>\r\n                    <Box component='form' onSubmit={this.handleDialogSubmit}>\r\n                        <DialogTitle>\r\n                            Create a new workspace\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"normal\"\r\n                                id=\"name\"\r\n                                required\r\n                                value={createDialogValue.name}\r\n                                onChange={(event: any) => {\r\n                                    this.setState({\r\n                                        createDialogValue: {\r\n                                            ...createDialogValue,\r\n                                            name: event.target.value,\r\n                                        }\r\n                                    })\r\n                                }}\r\n                                label=\"Name\"\r\n                                type=\"text\"\r\n                                variant='standard'\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleDialogClose}>Cancel</Button>\r\n                            <Button type=\"submit\" color=\"success\">Create</Button>\r\n                        </DialogActions>\r\n                    </Box>\r\n                </Dialog>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WorkspaceSelector\r\n","import * as React from 'react';\r\nimport { Typography, Box } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport WorkspaceSelector from './WorkspaceSelector';\r\nimport { AppAppBar } from '../../components/AppAppBar';\r\nimport PageLayout from '../../components/PageLayout';\r\n\r\n\r\nconst MiddlePadding = styled(Box)(({ theme }) => ({\r\n    height: '6vh'\r\n}));\r\n\r\nclass WorkspaceInstruction extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <AppAppBar pageName={'Workspace'} />\r\n                <PageLayout>\r\n                    <Box sx={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        flexDirection: 'column',\r\n                        justifyContent: 'center',\r\n                    }}>\r\n                        <Box sx={{ flexGrow: 3 }} />\r\n                        <Box sx={{\r\n                            flexGrow: 3,\r\n                            flexShrink: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            flexDirection: 'column'\r\n                        }}>\r\n                            <Typography variant='h3' gutterBottom>\r\n                                Please select a Workspace\r\n                            </Typography>\r\n                            <MiddlePadding />\r\n                            <WorkspaceSelector name='Open or create a workspace' />\r\n                        </Box>\r\n                        <Box sx={{ flexGrow: 5 }} />\r\n                    </Box>\r\n                </PageLayout>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WorkspaceInstruction;\r\n","import { Container, styled, Theme, Toolbar } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\n// import { SxProps } from '@mui/system';\r\nimport * as React from 'react';\r\n\r\nconst PageContainer = styled(Box)(({theme}) => ({\r\n    color: theme.palette.common.white,\r\n    position: 'absolute',\r\n    left: '6vh',\r\n    right: '6vh',\r\n    top: 64,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    alignItems: 'stretch',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start',\r\n}));\r\n\r\n\r\nconst Background = styled(Box)({\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    zIndex: -2,\r\n});\r\n\r\n\r\nexport default function EditorPageLayout(\r\n    props: React.HTMLAttributes<HTMLDivElement>\r\n) {\r\n    const { children } = props;\r\n\r\n    return (\r\n        <React.Fragment >\r\n            <PageContainer>\r\n                {children}\r\n            </PageContainer>\r\n            <Background/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Typography, Box, AppBar, Toolbar, IconButton, Button, Container, Autocomplete, TextField, Backdrop, CircularProgress, List, ListSubheader, ListItem, ListItemButton, ListItemIcon, Checkbox, ListItemText, Paper, RadioGroup, InputLabel, FormControlLabel, Radio } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport axios from 'axios';\r\nimport EditorPageLayout from '../../components/EditorPageLayout';\r\nimport { styled } from '@mui/material/styles';\r\n\r\n\r\ninterface WSEditorSwaggerPickerProps {\r\n    workspaceName: string,\r\n    plane: string,\r\n    onClose: (updated: boolean) => void\r\n}\r\n\r\ninterface WSEditorSwaggerPickerState {\r\n    loading: boolean\r\n\r\n    plane: string\r\n\r\n    // preModuleName: string | null\r\n    // preResourceProvider: string | null\r\n    // preVersion: string | null\r\n\r\n    moduleOptions: string[],\r\n    resourceProviderOptions: string[],\r\n    versionOptions: string[],\r\n\r\n    versionResourceIdMap: VersionResourceIdMap,\r\n    resourceMap: ResourceMap,\r\n    resourceOptions: string[],\r\n\r\n    existingResources: Set<string>,\r\n    selectedResources: Set<string>,\r\n\r\n    moduleOptionsCommonPrefix: string,\r\n    resourceProviderOptionsCommonPrefix: string,\r\n\r\n    selectedModule: string | null,\r\n    selectedResourceProvider: string | null,\r\n    selectedVersion: string | null,\r\n\r\n    updateOptions: string[],\r\n    updateOption: string,\r\n}\r\n\r\ntype ResourceVersionOperations = {\r\n    [Named: string]: string\r\n}\r\n\r\ntype ResourceVersion = {\r\n    version: string\r\n    operations: ResourceVersionOperations\r\n    file: string\r\n    id: string\r\n    path: string\r\n}\r\n\r\ntype Resource = {\r\n    id: string\r\n    versions: ResourceVersion[]\r\n}\r\n\r\ntype VersionResourceIdMap = {\r\n    [version: string]: string[]\r\n}\r\n\r\ntype ResourceMap = {\r\n    [id: string]: Resource\r\n}\r\n\r\nconst MiddlePadding = styled(Box)(({ theme }) => ({\r\n    height: '2vh'\r\n}));\r\n\r\nconst MiddlePadding2 = styled(Box)(({ theme }) => ({\r\n    height: '8vh'\r\n}));\r\n\r\nconst UpdateOptions = [\"Generic(Get&Put) First\", \"Patch First\"];\r\n\r\nclass WSEditorSwaggerPicker extends React.Component<WSEditorSwaggerPickerProps, WSEditorSwaggerPickerState> {\r\n\r\n    constructor(props: WSEditorSwaggerPickerProps) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            // preModuleName: null,\r\n            // preResourceProvider: null,\r\n            // preVersion: null,\r\n            existingResources: new Set(),\r\n\r\n            plane: this.props.plane,\r\n            moduleOptionsCommonPrefix: '',\r\n            resourceProviderOptionsCommonPrefix: '',\r\n            moduleOptions: [],\r\n            versionOptions: [],\r\n            resourceProviderOptions: [],\r\n            selectedResources: new Set(),\r\n            resourceOptions: [],\r\n            versionResourceIdMap: {},\r\n            resourceMap: {},\r\n            selectedModule: null,\r\n            selectedResourceProvider: null,\r\n            selectedVersion: null,\r\n\r\n            updateOptions: UpdateOptions,\r\n            updateOption: UpdateOptions[0],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadWorkspaceResources().then(() => {\r\n            this.loadSwaggerModules(this.props.plane);\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.onClose(false);\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.addSwagger()\r\n    }\r\n\r\n    loadSwaggerModules = (plane: string) => {\r\n        axios.get(`/Swagger/Specs/${plane}`)\r\n            .then((res) => {\r\n                const options: string[] = res.data.map((v: any) => (v.url));\r\n                this.setState(preState => {\r\n                    return {\r\n                        ...preState,\r\n                        moduleOptions: options,\r\n                        moduleOptionsCommonPrefix: `/Swagger/Specs/${plane}/`,\r\n                        preModuleName: null,\r\n                    }\r\n                });\r\n            })\r\n            .catch((err) => console.error(err.response));\r\n    }\r\n\r\n    loadResourceProviders = (moduleUrl: string | null) => {\r\n        if (moduleUrl != null) {\r\n            axios.get(`${moduleUrl}/ResourceProviders`)\r\n                .then((res) => {\r\n                    const options: string[] = res.data.map((v: any) => (v.url));\r\n                    const selectedResourceProvider = options.length === 1 ? options[0] : null;\r\n                    this.setState({\r\n                        resourceProviderOptions: options,\r\n                        resourceProviderOptionsCommonPrefix: `${moduleUrl}/ResourceProviders/`\r\n                    });\r\n                    this.onResourceProviderUpdate(selectedResourceProvider);\r\n                })\r\n                .catch((err) => console.error(err.response.message));\r\n        } else {\r\n            this.setState({\r\n                resourceProviderOptions: [],\r\n            })\r\n            this.onResourceProviderUpdate(null);\r\n        }\r\n    }\r\n\r\n    loadWorkspaceResources = () => {\r\n        return axios.get(`/AAZ/Editor/Workspaces/${this.props.workspaceName}/CommandTree/Nodes/aaz/Resources`)\r\n            .then(res => {\r\n                const existingResources = new Set<string>();\r\n                // let preModuleName: string | null = null;\r\n                // let preResourceProvider: string | null = null;\r\n                // let preVersion: string | null = null;\r\n\r\n                if (res.data && Array.isArray(res.data) && res.data.length > 0) {\r\n                    const pieces = res.data[0].swagger.slice().replace(`/ResourceProviders/`, ' ').split(' ')\r\n                    // preModuleName = `/Swagger/Specs/${pieces[0]}`;\r\n                    // preResourceProvider = pieces[1].split('/')[0]\r\n                    // preVersion = res.data[0].version\r\n                    res.data.forEach(resource => {\r\n                        existingResources.add(resource.id);\r\n                    });\r\n                }\r\n                this.setState({\r\n                    // preModuleName: preModuleName,\r\n                    // preResourceProvider: preResourceProvider,\r\n                    // preVersion: preVersion,\r\n                    existingResources: existingResources,\r\n                })\r\n            })\r\n            .catch((err) => console.error(err.response));\r\n    }\r\n\r\n    loadResources = (resourceProviderUrl: string | null) => {\r\n        if (resourceProviderUrl != null) {\r\n            this.setState({\r\n                loading: true,\r\n            })\r\n            axios.get(`${resourceProviderUrl}/Resources`)\r\n                .then(res => {\r\n                    // const resourceIdVersionMap: ResourceIdVersionMap = {}\r\n                    const versionResourceIdMap: VersionResourceIdMap = {}\r\n                    const versionOptions: string[] = []\r\n                    const resourceMap: ResourceMap = {}\r\n                    res.data.forEach((resource: Resource) => {\r\n                        // resource.versions.sort((a, b) =>  a.version.localeCompare(b.version));\r\n                        resourceMap[resource.id] = resource;\r\n\r\n                        const resourceVersions = resource.versions.map((v) => v.version)\r\n                        // resourceIdVersionMap[resource.id] = versions;\r\n                        resourceVersions.forEach((v) => {\r\n                            if (!(v in versionResourceIdMap)) {\r\n                                versionResourceIdMap[v] = [];\r\n                                versionOptions.push(v);\r\n                            }\r\n                            versionResourceIdMap[v].push(resource.id);\r\n                        })\r\n                    })\r\n                    versionOptions.sort((a, b) => a.localeCompare(b)).reverse()\r\n                    let selectVersion = null;\r\n                    if (versionOptions.length > 0) {\r\n                        selectVersion = versionOptions[0];\r\n                    }\r\n                    this.setState({\r\n                        loading: false,\r\n                        versionResourceIdMap: versionResourceIdMap,\r\n                        resourceMap: resourceMap,\r\n                        versionOptions: versionOptions,\r\n                    })\r\n                    this.onVersionUpdate(selectVersion);\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err.response);\r\n                    this.setState({\r\n                        loading: false,\r\n                    });\r\n                })\r\n        } else {\r\n            this.setState({\r\n                versionOptions: [],\r\n            })\r\n            this.onVersionUpdate(null)\r\n        }\r\n    }\r\n\r\n    addSwagger = () => {\r\n\r\n        const { selectedResources, selectedVersion, selectedModule, moduleOptionsCommonPrefix, updateOption, resourceMap } = this.state;\r\n        const resources: { id: string, options?: { update_by: string } }[] = [];\r\n        selectedResources.forEach((resourceId) => {\r\n            const res: any = {\r\n                id: resourceId,\r\n                options: undefined,\r\n            }\r\n\r\n            if (updateOption === UpdateOptions[1]) {\r\n                // patch first\r\n                const resource = resourceMap[resourceId];\r\n                const operations = resource.versions.find(v => v.version === selectedVersion)?.operations;\r\n                if (operations) {\r\n                    for (const opName in operations) {\r\n                        if (operations[opName].toLowerCase() === \"patch\") {\r\n                            res.options = {\r\n                                update_by: \"PatchOnly\",\r\n                            }\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            resources.push(res)\r\n        });\r\n\r\n        const requestBody = {\r\n            module: selectedModule!.slice().replace(moduleOptionsCommonPrefix, ''),\r\n            version: selectedVersion,\r\n            resources: resources,\r\n        }\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        axios.post(`/AAZ/Editor/Workspaces/${this.props.workspaceName}/CommandTree/Nodes/aaz/AddSwagger`, requestBody)\r\n            .then(res => {\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n                this.props.onClose(true);\r\n            })\r\n            .catch((err) => console.error(err.response));\r\n    }\r\n\r\n    onModuleSelectorUpdate = (moduleValueUrl: string | null) => {\r\n        if (this.state.selectedModule != moduleValueUrl) {\r\n            this.loadResourceProviders(moduleValueUrl);\r\n        }\r\n        this.setState({\r\n            selectedModule: moduleValueUrl\r\n        });\r\n    }\r\n\r\n    onResourceProviderUpdate = (resourceProviderUrl: string | null) => {\r\n        if (this.state.selectedResourceProvider != resourceProviderUrl) {\r\n            this.loadResources(resourceProviderUrl);\r\n        }\r\n        this.setState({\r\n            selectedResourceProvider: resourceProviderUrl\r\n        })\r\n    }\r\n\r\n    onVersionUpdate = (version: string | null) => {\r\n        this.setState(preState => {\r\n            let selectedResources = preState.selectedResources;\r\n            let resourceOptions: string[] = [];\r\n            if (version != null) {\r\n                selectedResources = new Set();\r\n                resourceOptions = [...preState.versionResourceIdMap[version]]\r\n                    .sort((a, b) => a.localeCompare(b))\r\n                    .filter(value => !preState.existingResources.has(value));\r\n                resourceOptions.forEach((resourceId) => {\r\n                    if (preState.selectedResources.has(resourceId)) {\r\n                        selectedResources.add(resourceId);\r\n                    }\r\n                })\r\n            }\r\n            return {\r\n                ...preState,\r\n                resourceOptions: resourceOptions,\r\n                selectedVersion: version,\r\n                selectedResources: selectedResources,\r\n            }\r\n        })\r\n    }\r\n\r\n    onUpdateOptionUpdate = (updateOption: string | null) => {\r\n\r\n        this.setState({\r\n            updateOption: updateOption ?? UpdateOptions[0]\r\n        })\r\n    }\r\n\r\n    onResourceItemClick = (resourceId: string) => {\r\n        return () => {\r\n            this.setState(preState => {\r\n                const selectedResources = new Set(preState.selectedResources);\r\n                if (selectedResources.has(resourceId)) {\r\n                    selectedResources.delete(resourceId);\r\n                } else if (!preState.existingResources.has(resourceId)) {\r\n                    selectedResources.add(resourceId);\r\n                }\r\n                return {\r\n                    ...preState,\r\n                    selectedResources: selectedResources,\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { selectedResources, existingResources, resourceOptions, selectedVersion, selectedModule } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <AppBar sx={{ position: \"fixed\" }}>\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            onClick={this.handleClose}\r\n                            aria-label=\"close\"\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography sx={{ ml: 2, flex: 1, flexDirection: \"row\", display: \"flex\", justifyContent: \"center\", alignContent: \"center\" }} variant='h5' component='div'>\r\n                            Add Swagger Resources\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <EditorPageLayout\r\n                >\r\n                    <Box sx={{\r\n                        flexShrink: 0,\r\n                        width: 250,\r\n                        flexDirection: 'column',\r\n                        display: 'flex',\r\n                        alignItems: 'stretch',\r\n                        justifyContent: 'flex-start',\r\n                        marginRight: '3vh'\r\n                    }}>\r\n                        <ListSubheader> Swagger Filters</ListSubheader>\r\n                        <MiddlePadding />\r\n                        <SwaggerItemSelector\r\n                            name='Swagger Module'\r\n                            commonPrefix={this.state.moduleOptionsCommonPrefix}\r\n                            options={this.state.moduleOptions}\r\n                            value={this.state.selectedModule}\r\n                            onValueUpdate={this.onModuleSelectorUpdate} />\r\n                        <MiddlePadding />\r\n                        <SwaggerItemSelector\r\n                            name='Resource Provider'\r\n                            commonPrefix={this.state.resourceProviderOptionsCommonPrefix}\r\n                            options={this.state.resourceProviderOptions}\r\n                            value={this.state.selectedResourceProvider}\r\n                            onValueUpdate={this.onResourceProviderUpdate}\r\n                        />\r\n                        <MiddlePadding />\r\n                        <SwaggerItemSelector\r\n                            name='API Version'\r\n                            commonPrefix=''\r\n                            options={this.state.versionOptions}\r\n                            value={this.state.selectedVersion}\r\n                            onValueUpdate={this.onVersionUpdate}\r\n                        />\r\n                        <MiddlePadding2 />\r\n                        <SwaggerItemSelector\r\n                            name='Update Command Mode'\r\n                            commonPrefix=''\r\n                            options={this.state.updateOptions}\r\n                            value={this.state.updateOption}\r\n                            onValueUpdate={this.onUpdateOptionUpdate}\r\n                        />\r\n                        <MiddlePadding2 />\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            onClick={this.handleSubmit}\r\n                            disabled={selectedModule === null || selectedVersion === null || selectedResources.size < 1}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </Box>\r\n                    <List\r\n                        dense\r\n                        sx={{ flexGrow: 1 }}\r\n                        subheader={<ListSubheader>Resource Url</ListSubheader>}\r\n                    >\r\n                        {resourceOptions.map((option) => {\r\n                            const labelId = `resource-${option}`;\r\n                            return <ListItem\r\n                                key={option}\r\n                                disablePadding\r\n                            >\r\n                                <ListItemButton dense onClick={this.onResourceItemClick(option)}>\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            checked={selectedResources.has(option) || existingResources.has(option)}\r\n                                            tabIndex={-1}\r\n                                            disableRipple\r\n                                            inputProps={{ 'aria-labelledby': labelId }}\r\n                                        />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText id={labelId}\r\n                                        primary={option}\r\n                                        primaryTypographyProps={{\r\n                                            variant: \"h6\",\r\n                                        }}\r\n                                    />\r\n                                </ListItemButton>\r\n                            </ListItem>\r\n                        })}\r\n                    </List>\r\n                </EditorPageLayout>\r\n                <Backdrop\r\n                    sx={{ color: '#fff', zIndex: (theme: any) => theme.zIndex.drawer + 1 }}\r\n                    open={this.state.loading}\r\n                >\r\n                    <CircularProgress color='inherit' />\r\n                </Backdrop>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\ninterface SwaggerItemsSelectorProps {\r\n    commonPrefix: string,\r\n    options: string[],\r\n    name: string,\r\n    value: string | null,\r\n    onValueUpdate: (value: string | null) => void\r\n}\r\n\r\n\r\nclass SwaggerItemSelector extends React.Component<SwaggerItemsSelectorProps> {\r\n\r\n    constructor(props: SwaggerItemsSelectorProps) {\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.options.length === 1 ? this.props.options[0] : null,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // const { value } = this.state;\r\n        const { name, options, commonPrefix, value } = this.props;\r\n        return (\r\n            <Autocomplete\r\n                id={name}\r\n                value={value}\r\n                options={options}\r\n                onChange={(event, newValue: any) => {\r\n                    this.props.onValueUpdate(newValue);\r\n                }}\r\n                getOptionLabel={(option) => {\r\n                    return option.replace(commonPrefix, '');\r\n                }}\r\n                renderOption={(props, option) => {\r\n                    return (\r\n                        <Box component='li'\r\n                            {...props}\r\n                        >\r\n                            {option.replace(commonPrefix, '')}\r\n                        </Box>\r\n                    )\r\n                }}\r\n                selectOnFocus\r\n                clearOnBlur\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        size='small'\r\n                        // variant='filled'\r\n                        label={name}\r\n                        required\r\n                    />\r\n                )}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default WSEditorSwaggerPicker;\r\n","import { BorderColor } from '@mui/icons-material';\r\nimport { AppBar, Button, Container, IconButton, styled, Theme, Toolbar, Typography, Tooltip } from '@mui/material';\r\nimport { borderBottom, Box } from '@mui/system';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\n\r\nimport * as React from 'react';\r\n\r\n\r\ninterface WSEditorToolBarProps {\r\n    workspaceName: string\r\n    onHomePage: () => void\r\n    onGenerate: () => void\r\n}\r\n\r\n\r\nconst MiddlePadding = styled(Box)(({ theme }) => ({\r\n    height: '6vh'\r\n}));\r\n\r\nclass WSEditorToolBar extends React.Component<WSEditorToolBarProps> {\r\n\r\n    render() {\r\n        const { workspaceName, onHomePage, onGenerate } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <AppBar sx={{\r\n                    position: \"fixed\",\r\n                    zIndex: (theme) => theme.zIndex.drawer + 1,\r\n                }}>\r\n                    <Toolbar sx={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: \"flex-start\",\r\n                        height: 64,\r\n                    }}>\r\n                        <IconButton\r\n                            color='inherit'\r\n                            onClick={onHomePage}\r\n                            aria-label='home'\r\n                            sx={{ mr: 2, flexShrink: 0 }}\r\n                        >\r\n                            <HomeIcon sx={{ mr: 2 }} />\r\n                            <Typography\r\n                                variant='h6'\r\n                                component='div'\r\n                                color='inherit'\r\n                                sx={{ mr: 2 }}\r\n                            >\r\n                                WORKSPACE\r\n                            </Typography>\r\n                        </IconButton>\r\n\r\n                        <Typography\r\n                            variant='h5'\r\n                            component='div'\r\n                            color='inherit'\r\n\r\n                        >\r\n                            {workspaceName}\r\n                        </Typography>\r\n\r\n                        <Box sx={{ flexGrow: 1 }} />\r\n                        <Box sx={{ flexShrink: 0 }} >\r\n                       \r\n                            <Tooltip title='Export Command Models'>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color='inherit'\r\n                                    onClick={onGenerate}\r\n                                >\r\n                                    Export\r\n                                </Button>\r\n                            </Tooltip>\r\n\r\n                        </Box>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default WSEditorToolBar;\r\n","import * as React from 'react';\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport TreeItem from '@mui/lab/TreeItem';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport { Box, IconButton, Tooltip, Typography, TypographyProps } from '@mui/material';\r\nimport { styled } from '@mui/system';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\n\r\ninterface CommandTreeLeaf {\r\n    id: string\r\n    names: string[]\r\n}\r\n\r\ninterface CommandTreeNode {\r\n    id: string\r\n    names: string[]\r\n    nodes?: CommandTreeNode[]\r\n    leaves?: CommandTreeLeaf[]\r\n    canDelete: boolean\r\n}\r\n\r\n\r\ninterface WSEditorCommandTreeProps {\r\n    commandTreeNodes: CommandTreeNode[]\r\n    selected: string\r\n    expanded: string[]\r\n    onSelected: (nodeId: string) => void\r\n    onToggle: (nodeIds: string[]) => void\r\n    onAdd: () => void\r\n}\r\n\r\n\r\nconst HeaderTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\r\n    color: theme.palette.primary.main,\r\n    fontFamily: \"'Work Sans', sans-serif\",\r\n    fontSize: 16,\r\n    fontWeight: 600,\r\n}))\r\n\r\n\r\nclass WSEditorCommandTree extends React.Component<WSEditorCommandTreeProps> {\r\n\r\n    onNodeSelected = (event: React.SyntheticEvent, nodeIds: string[] | string) => {\r\n        if (typeof nodeIds === 'string') {\r\n            this.props.onSelected(nodeIds);\r\n        }\r\n    }\r\n\r\n    onNodeToggle = (event: React.SyntheticEvent, nodeIds: string[]) => {\r\n        this.props.onToggle(nodeIds);\r\n    }\r\n\r\n    render() {\r\n        const { commandTreeNodes, selected, onAdd, expanded } = this.props;\r\n\r\n        const renderLeaf = (leaf: CommandTreeLeaf) => {\r\n            // const leafId = 'command:' +  leaf.names.join('/');\r\n            const leafName = leaf.names[leaf.names.length - 1];\r\n            return (\r\n                <TreeItem key={leaf.id} nodeId={leaf.id} label={leafName} color='inherit' />\r\n            )\r\n        }\r\n\r\n        const renderNode = (node: CommandTreeNode) => {\r\n            // const nodeId = 'group:' +  node.names.join('/');\r\n            const nodeName = node.names[node.names.length - 1];\r\n            return (\r\n                <TreeItem key={node.id} nodeId={node.id} label={nodeName} color='inherit'>\r\n                    {Array.isArray(node.leaves) ? node.leaves.map((leaf) => renderLeaf(leaf)) : null}\r\n                    {Array.isArray(node.nodes) ? node.nodes.map((subNode) => renderNode(subNode)) : null}\r\n                </TreeItem>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Box sx={{\r\n                    mt: 2, ml: 4, mr: 2,\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-start\",\r\n                }}>\r\n                    <HeaderTypography>Command Tree</HeaderTypography>\r\n                    <Box sx={{flexGrow: 1}}/>\r\n                    <Tooltip title='Add from Swagger'>\r\n                        <IconButton\r\n                            color='info'\r\n                            onClick={onAdd}\r\n                            aria-label='add'\r\n                        >\r\n                            <AddIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Box>\r\n                <TreeView\r\n                    defaultCollapseIcon={<ExpandMoreIcon />}\r\n                    defaultExpandIcon={<ChevronRightIcon />}\r\n                    onNodeSelect={this.onNodeSelected}\r\n                    onNodeToggle={this.onNodeToggle}\r\n                    selected={selected}\r\n                    expanded={expanded}\r\n                    sx={{\r\n                        flexGrow: 1,\r\n                        overflowY: 'auto',\r\n                        mt: 1,\r\n                        ml: 3,\r\n                        mr: 3,\r\n                    }}\r\n                >\r\n                    {commandTreeNodes.map((node) => renderNode(node))}\r\n                </TreeView>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default WSEditorCommandTree;\r\n\r\nexport type { CommandTreeNode, CommandTreeLeaf };\r\n","import { Typography, TypographyProps } from '@mui/material';\r\nimport { styled } from '@mui/system';\r\n\r\nconst CardTitleTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\r\n    color: theme.palette.primary.main,\r\n    fontFamily: \"'Roboto Condensed', sans-serif\",\r\n    fontSize: 18,\r\n    fontWeight: 400,\r\n}))\r\n\r\nconst NameTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\r\n    color: theme.palette.primary.main,\r\n    fontFamily: \"'Roboto Condensed', sans-serif\",\r\n    fontSize: 32,\r\n    fontWeight: 700,\r\n}))\r\n\r\nconst ShortHelpTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\r\n    color: theme.palette.primary.main,\r\n    fontFamily: \"'Work Sans', sans-serif\",\r\n    fontSize: 18,\r\n    fontWeight: 400,\r\n    fontStyle: \"italic\"\r\n}))\r\n\r\nconst ShortHelpPlaceHolderTypography = styled(ShortHelpTypography)<TypographyProps>(({ theme }) => ({\r\n    color: '#5d64cf',\r\n}))\r\n\r\nconst LongHelpTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\r\n    color: theme.palette.primary.main,\r\n    fontFamily: \"'Work Sans', sans-serif\",\r\n    fontSize: 16,\r\n    fontWeight: 400,\r\n}))\r\n\r\nconst StableTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\r\n    color: '#67b349',\r\n    fontFamily: \"'Work Sans', sans-serif\",\r\n    fontSize: 20,\r\n    fontWeight: 200,\r\n}))\r\n\r\nconst PreviewTypography = styled(StableTypography)<TypographyProps>(({ theme }) => ({\r\n    color: '#d1b102',\r\n}))\r\n\r\nconst ExperimentalTypography = styled(StableTypography)<TypographyProps>(({ theme }) => ({\r\n    color: '#e05376',\r\n}))\r\n\r\nconst SmallStableTypography = styled(StableTypography)<TypographyProps>(({ theme }) => ({\r\n    fontSize: 12,\r\n}))\r\n\r\nconst SmallPreviewTypography = styled(PreviewTypography)<TypographyProps>(({ theme }) => ({\r\n    fontSize: 12,\r\n}))\r\n\r\nconst SmallExperimentalTypography = styled(ExperimentalTypography)<TypographyProps>(({ theme }) => ({\r\n    fontSize: 12,\r\n}))\r\n\r\nconst SubtitleTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\r\n    color: theme.palette.primary.main,\r\n    fontFamily: \"'Roboto Condensed', sans-serif\",\r\n    fontSize: 16,\r\n    fontWeight: 700,\r\n}))\r\n\r\nexport {CardTitleTypography, NameTypography,\r\n     ShortHelpTypography, ShortHelpPlaceHolderTypography,\r\n      LongHelpTypography, StableTypography,\r\n       PreviewTypography, ExperimentalTypography,\r\n        SubtitleTypography, SmallStableTypography, SmallPreviewTypography, SmallExperimentalTypography};\r\n","import { Alert, Box, Button, Card, CardActions, CardContent, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, InputLabel, LinearProgress, Radio, RadioGroup, TextField, Typography, TypographyProps } from '@mui/material';\r\nimport axios from 'axios';\r\nimport * as React from 'react';\r\nimport { ResponseCommands } from './WSEditorCommandContent';\r\nimport { NameTypography, ShortHelpTypography, ShortHelpPlaceHolderTypography, LongHelpTypography, StableTypography, PreviewTypography, ExperimentalTypography } from './WSEditorTheme';\r\n\r\ninterface CommandGroup {\r\n    id: string\r\n    names: string[]\r\n    stage: \"Stable\" | \"Preview\" | \"Experimental\"\r\n    help?: {\r\n        short: string\r\n        lines?: string[]\r\n    }\r\n    canDelete: boolean\r\n}\r\n\r\ninterface ResponseCommandGroup {\r\n    names: string[]\r\n    stage?: \"Stable\" | \"Preview\" | \"Experimental\"\r\n    help?: {\r\n        short: string\r\n        lines?: string[]\r\n    }\r\n    commands?: ResponseCommands\r\n    commandGroups?: ResponseCommandGroups\r\n}\r\n\r\n\r\ninterface ResponseCommandGroups {\r\n    [name: string]: ResponseCommandGroup\r\n}\r\n\r\n\r\nconst commandPrefix = 'az '\r\n\r\ninterface WSEditorCommandGroupContentProps {\r\n    workspaceUrl: string\r\n    commandGroup: CommandGroup\r\n    onUpdateCommandGroup: (commandGroup: CommandGroup | null) => void\r\n}\r\n\r\ninterface WSEditorCommandGroupContentState {\r\n    displayCommandGroupDialog: boolean\r\n    displayCommandGroupDeleteDialog: boolean\r\n}\r\n\r\nclass WSEditorCommandGroupContent extends React.Component<WSEditorCommandGroupContentProps, WSEditorCommandGroupContentState> {\r\n\r\n    constructor(props: WSEditorCommandGroupContentProps) {\r\n        super(props);\r\n        this.state = {\r\n            displayCommandGroupDialog: false,\r\n            displayCommandGroupDeleteDialog: false,\r\n        }\r\n    }\r\n\r\n    onCommandGroupDialogDisplay = () => {\r\n        this.setState({\r\n            displayCommandGroupDialog: true,\r\n        })\r\n    }\r\n\r\n    onCommandGroupDeleteDialogDisplay = () => {\r\n        this.setState({\r\n            displayCommandGroupDeleteDialog: true,\r\n        })\r\n    }\r\n\r\n    handleCommandGroupDialogClose = (newCommandGroup?: CommandGroup) => {\r\n        this.setState({\r\n            displayCommandGroupDialog: false,\r\n        })\r\n        if (newCommandGroup) {\r\n            this.props.onUpdateCommandGroup(newCommandGroup!);\r\n        }\r\n    }\r\n\r\n    handleCommandGroupDeleteDialogClose = (deleted: boolean) => {\r\n        this.setState({\r\n            displayCommandGroupDeleteDialog: false,\r\n        })\r\n        if (deleted) {\r\n            this.props.onUpdateCommandGroup(null);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { workspaceUrl, commandGroup } = this.props;\r\n        const name = commandPrefix + this.props.commandGroup.names.join(' ');\r\n        const shortHelp = this.props.commandGroup.help?.short;\r\n        const longHelp = this.props.commandGroup.help?.lines?.join('\\n');\r\n        const lines: string[] = this.props.commandGroup.help?.lines ?? [];\r\n        const stage = this.props.commandGroup.stage;\r\n        const { displayCommandGroupDialog, displayCommandGroupDeleteDialog } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <Box sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'stretch',\r\n                }}>\r\n                    <Card\r\n                        // variant='outlined'\r\n                        elevation={3}\r\n                        sx={{\r\n                            flexGrow: 1, display: 'flex', flexDirection: 'column',\r\n                            p: 2\r\n                        }}>\r\n                        <CardContent sx={{\r\n                            flex: '1 0 auto',\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'stretch',\r\n                        }}>\r\n                            <Box sx={{\r\n                                mb: 2,\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                alignItems: \"center\"\r\n                            }}>\r\n                                <Typography\r\n                                    variant='h6'\r\n                                    sx={{ flexShrink: 0 }}\r\n                                >\r\n                                    [ GROUP ]\r\n                                </Typography>\r\n                                <Box sx={{ flexGrow: 1 }} />\r\n                                {stage === \"Stable\" && <StableTypography\r\n                                    sx={{ flexShrink: 0 }}\r\n                                >\r\n                                    {stage}\r\n                                </StableTypography>}\r\n                                {stage === \"Preview\" && <PreviewTypography\r\n                                    sx={{ flexShrink: 0 }}\r\n                                >\r\n                                    {stage}\r\n                                </PreviewTypography>}\r\n                                {stage === \"Experimental\" && <ExperimentalTypography\r\n                                    sx={{ flexShrink: 0 }}\r\n                                >\r\n                                    {stage}\r\n                                </ExperimentalTypography>}\r\n                            </Box>\r\n\r\n                            <NameTypography sx={{ mt: 1 }}>\r\n                                {name}\r\n                            </NameTypography>\r\n                            {shortHelp && <ShortHelpTypography sx={{ ml: 6, mt: 2 }}> {shortHelp} </ShortHelpTypography>}\r\n                            {!shortHelp && <ShortHelpPlaceHolderTypography sx={{ ml: 6, mt: 2 }}>Please add command group short summery!</ShortHelpPlaceHolderTypography>}\r\n                            {longHelp && <Box sx={{ ml: 6, mt: 1, mb: 1 }}>\r\n                                {lines.map((line, idx) => (<LongHelpTypography key={idx}>{line}</LongHelpTypography>))}\r\n                            </Box>}\r\n                        </CardContent>\r\n                        <CardActions sx={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"row-reverse\",\r\n                            alignContent: \"center\",\r\n                            justifyContent: \"flex-start\"\r\n                        }}>\r\n                            <Box sx={{\r\n                                display: \"flex\",\r\n                                flexDirection: \"row\",\r\n                                alignContent: \"center\",\r\n                                justifyContent: \"flex-start\"\r\n                            }}>\r\n                                <Button\r\n                                    variant='contained' size=\"small\" color='info' disableElevation\r\n                                    onClick={this.onCommandGroupDialogDisplay}\r\n                                >\r\n                                    <Typography variant='body2'>\r\n                                        Edit\r\n                                    </Typography>\r\n                                </Button>\r\n                                <Button\r\n                                    variant='outlined' size=\"small\" color='info'\r\n                                    onClick={this.onCommandGroupDeleteDialogDisplay}\r\n                                    disabled={!this.props.commandGroup.canDelete}\r\n                                    sx={{ ml: 2 }}\r\n                                >\r\n                                    <Typography variant='body2'>\r\n                                        Delete\r\n                                    </Typography>\r\n                                </Button>\r\n                            </Box>\r\n\r\n                        </CardActions>\r\n                    </Card>\r\n                </Box>\r\n                {displayCommandGroupDialog && <CommandGroupDialog open={displayCommandGroupDialog} workspaceUrl={workspaceUrl} commandGroup={commandGroup} onClose={this.handleCommandGroupDialogClose} />}\r\n                {displayCommandGroupDeleteDialog && <CommandGroupDeleteDialog open={displayCommandGroupDeleteDialog} workspaceUrl={workspaceUrl} commandGroup={commandGroup} onClose={this.handleCommandGroupDeleteDialogClose} />}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction CommandGroupDeleteDialog(props: {\r\n    workspaceUrl: string,\r\n    open: boolean\r\n    commandGroup: CommandGroup\r\n    onClose: (deleted: boolean) => void\r\n}) {\r\n\r\n    const [updating, setUpdating] = React.useState<boolean>(false);\r\n\r\n    const handleClose = () => {\r\n        props.onClose(false);\r\n    }\r\n    const handleDelete = () => {\r\n        const nodeUrl = `${props.workspaceUrl}/CommandTree/Nodes/aaz/` + props.commandGroup.names.join('/');\r\n        setUpdating(true);\r\n\r\n        axios.delete(nodeUrl)\r\n            .then(res => {\r\n                setUpdating(false);\r\n                props.onClose(true);\r\n            }).catch(err => {\r\n                setUpdating(false);\r\n                console.error(err.response)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            disableEscapeKeyDown\r\n            open={props.open}\r\n        >\r\n            <DialogTitle>Delete Command Group</DialogTitle>\r\n            <DialogContent dividers={true}>\r\n                <Typography variant=\"body2\">{`${commandPrefix}${props.commandGroup.names.join(\" \")}`}</Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                {updating &&\r\n                    <Box sx={{ width: '100%' }}>\r\n                        <LinearProgress color='info' />\r\n                    </Box>\r\n                }\r\n                {!updating && <React.Fragment>\r\n                    <Button onClick={handleClose}>Cancel</Button>\r\n                    <Button onClick={handleDelete}>Delete</Button>\r\n                </React.Fragment>}\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n    )\r\n\r\n}\r\n\r\ninterface CommandGroupDialogProps {\r\n    workspaceUrl: string,\r\n    open: boolean\r\n    commandGroup: CommandGroup\r\n    onClose: (newCommandGroup?: CommandGroup) => void\r\n}\r\n\r\ninterface CommandGroupDialogState {\r\n    name: string,\r\n    stage: string,\r\n    shortHelp: string,\r\n    longHelp: string,\r\n    invalidText?: string,\r\n    updating: boolean\r\n}\r\n\r\nclass CommandGroupDialog extends React.Component<CommandGroupDialogProps, CommandGroupDialogState> {\r\n\r\n    constructor(props: CommandGroupDialogProps) {\r\n        super(props);\r\n        this.state = {\r\n            name: this.props.commandGroup.names.join(' '),\r\n            shortHelp: this.props.commandGroup.help?.short ?? \"\",\r\n            longHelp: this.props.commandGroup.help?.lines?.join('\\n') ?? \"\",\r\n            stage: this.props.commandGroup.stage,\r\n            updating: false\r\n        }\r\n    }\r\n\r\n    handleModify = (event: any) => {\r\n        let { name, stage, shortHelp, longHelp } = this.state\r\n        let { workspaceUrl, commandGroup } = this.props\r\n\r\n        name = name.trim();\r\n        shortHelp = shortHelp.trim();\r\n        longHelp = longHelp.trim();\r\n\r\n        const names = name.split(' ').filter((n) => n.length > 0);\r\n\r\n        this.setState({\r\n            invalidText: undefined\r\n        })\r\n\r\n        if (names.length < 1) {\r\n            this.setState({\r\n                invalidText: `Field 'Name' is required.`\r\n            })\r\n            return\r\n        }\r\n\r\n        for (const idx in names) {\r\n            const piece = names[idx];\r\n            if (!/^[a-z0-9]+(\\-[a-z0-9]+)*$/.test(piece)) {\r\n                this.setState({\r\n                    invalidText: `Invalid Name part: '${piece}'. Supported regular expression is: [a-z0-9]+(\\-[a-z0-9]+)* `\r\n                })\r\n                return\r\n            }\r\n        }\r\n\r\n        if (shortHelp.length < 1) {\r\n            this.setState({\r\n                invalidText: `Field 'Short Summery' is required.`\r\n            })\r\n        }\r\n\r\n        let lines: string[] | null = null;\r\n        if (longHelp.length > 1) {\r\n            lines = longHelp.split('\\n').filter(l => l.length > 0);\r\n        }\r\n\r\n        this.setState({\r\n            updating: true,\r\n        })\r\n\r\n        const nodeUrl = `${workspaceUrl}/CommandTree/Nodes/aaz/` + commandGroup.names.join('/');\r\n\r\n        axios.patch(nodeUrl, {\r\n            help: {\r\n                short: shortHelp,\r\n                lines: lines,\r\n            },\r\n            stage: stage,\r\n        }).then(res => {\r\n            const name = names.join(' ');\r\n            if (name === commandGroup.names.join(' ')) {\r\n                const cmdGroup = DecodeResponseCommandGroup(res.data);\r\n                this.setState({\r\n                    updating: false,\r\n                })\r\n                this.props.onClose(cmdGroup);\r\n            } else {\r\n                // Rename command Group\r\n                axios.post(`${nodeUrl}/Rename`, {\r\n                    name: name\r\n                }).then(res => {\r\n                    const cmdGroup = DecodeResponseCommandGroup(res.data);\r\n                    this.setState({\r\n                        updating: false,\r\n                    })\r\n                    this.props.onClose(cmdGroup);\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            console.error(err.response);\r\n            if (err.resource?.message) {\r\n                this.setState({\r\n                    invalidText: `ResponseError: ${err.resource!.message!}`,\r\n                })\r\n            }\r\n            this.setState({\r\n                updating: false,\r\n            })\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            invalidText: undefined\r\n        });\r\n        this.props.onClose();\r\n    }\r\n\r\n    render() {\r\n        const { name, shortHelp, longHelp, invalidText, updating, stage } = this.state\r\n        return (\r\n            <Dialog\r\n                disableEscapeKeyDown\r\n                open={this.props.open}\r\n                sx={{ '& .MuiDialog-paper': { width: '80%' } }}\r\n            >\r\n                <DialogTitle>Command Group</DialogTitle>\r\n                <DialogContent dividers={true}>\r\n                    {invalidText && <Alert variant=\"filled\" severity='error'> {invalidText} </Alert>}\r\n\r\n                    <InputLabel required shrink sx={{ font: \"inherit\" }}>Stage</InputLabel>\r\n                    <RadioGroup\r\n                        row\r\n                        value={stage}\r\n                        name=\"stage\"\r\n                        onChange={(event: any) => {\r\n                            this.setState({\r\n                                stage: event.target.value,\r\n                            })\r\n                        }}\r\n                    >\r\n                        <FormControlLabel value=\"Stable\" control={<Radio />} label=\"Stable\" sx={{ ml: 4 }} />\r\n                        <FormControlLabel value=\"Preview\" control={<Radio />} label=\"Preview\" sx={{ ml: 4 }} />\r\n                        <FormControlLabel value=\"Experimental\" control={<Radio />} label=\"Experimental\" sx={{ ml: 4 }} />\r\n                    </RadioGroup>\r\n\r\n                    <TextField\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant='standard'\r\n                        value={name}\r\n                        onChange={(event: any) => {\r\n                            this.setState({\r\n                                name: event.target.value,\r\n                            })\r\n                        }}\r\n                        margin=\"normal\"\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        id=\"shortSummery\"\r\n                        label=\"Short Summery\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant='standard'\r\n                        value={shortHelp}\r\n                        onChange={(event: any) => {\r\n                            this.setState({\r\n                                shortHelp: event.target.value,\r\n                            })\r\n                        }}\r\n                        margin=\"normal\"\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        id=\"longSummery\"\r\n                        label=\"Long Summery\"\r\n                        helperText=\"Please add long summer in lines.\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        multiline\r\n                        variant='standard'\r\n                        value={longHelp}\r\n                        onChange={(event: any) => {\r\n                            this.setState({\r\n                                longHelp: event.target.value,\r\n                            })\r\n                        }}\r\n                        margin=\"normal\"\r\n                    />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {updating &&\r\n                        <Box sx={{ width: '100%' }}>\r\n                            <LinearProgress color='info' />\r\n                        </Box>\r\n                    }\r\n                    {!updating && <React.Fragment>\r\n                        <Button onClick={this.handleClose}>Cancel</Button>\r\n                        <Button onClick={this.handleModify}>Save</Button>\r\n                    </React.Fragment>}\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst DecodeResponseCommandGroup = (commandGroup: ResponseCommandGroup): CommandGroup => {\r\n    return {\r\n        id: 'group:' + commandGroup.names.join('/'),\r\n        names: commandGroup.names,\r\n        help: commandGroup.help,\r\n        stage: commandGroup.stage ?? \"Stable\",\r\n        canDelete: true,\r\n    }\r\n}\r\n\r\nexport default WSEditorCommandGroupContent;\r\n\r\nexport { DecodeResponseCommandGroup };\r\nexport type { CommandGroup, ResponseCommandGroup, ResponseCommandGroups };\r\n\r\n","import { Accordion, AccordionDetails, AccordionSummaryProps, Box, Button, ButtonBase, CardActions, CardContent, CircularProgress, Typography, TypographyProps } from '@mui/material';\nimport { styled } from '@mui/system';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { CardTitleTypography, ExperimentalTypography, LongHelpTypography, PreviewTypography, ShortHelpPlaceHolderTypography, ShortHelpTypography, SmallExperimentalTypography, SmallPreviewTypography, SmallStableTypography, StableTypography, SubtitleTypography } from './WSEditorTheme';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\n\n\nfunction WSEditorCommandArgumentsContent(props: {\n    commandUrl: string,\n}) {\n\n    const [args, setArgs] = useState<CMDArg[]>([]);\n    const [clsArgDefineMap, setClsArgDefineMap] = useState<ClsArgDefinitionMap>({});\n\n    useEffect(() => {\n        axios.get(props.commandUrl)\n            .then(res => {\n                const { args, clsDefineMap } = decodeResponse(res.data);\n                setArgs(args);\n                setClsArgDefineMap(clsDefineMap);\n            }).catch(err => console.error(err.response));\n    }, [props.commandUrl]);\n\n    return (\n        <React.Fragment>\n            <CardContent sx={{\n                flex: '1 0 auto',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'stretch',\n            }}>\n                <Box sx={{\n                    mb: 2,\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignItems: \"center\"\n                }}>\n                    <CardTitleTypography sx={{ flexShrink: 0 }}>\n                        [ ARGUMENT ]\n                    </CardTitleTypography>\n                </Box>\n                <ArgumentNavigation commandUrl={props.commandUrl} args={args} clsArgDefineMap={clsArgDefineMap} />\n            </CardContent>\n        </React.Fragment>\n    )\n}\n\n\ninterface ArgIdx {\n    var: string,\n    displayKey: string,\n}\n\nfunction ArgumentNavigation(props: {\n    commandUrl: string,\n    args: CMDArg[],\n    clsArgDefineMap: ClsArgDefinitionMap,\n}) {\n    const [argIdxStack, setArgIdxStack] = useState<ArgIdx[]>([]);\n\n    const getArgProps = (selectedArgBase: CMDArgBase): { title: string, props: CMDArg[] } | undefined => {\n        if (selectedArgBase.type.startsWith('@')) {\n            return getArgProps(props.clsArgDefineMap[(selectedArgBase as CMDClsArgBase).clsName]);\n        }\n        if (selectedArgBase.type === \"object\") {\n            return {\n                title: \"Props\",\n                props: (selectedArgBase as CMDObjectArgBase).args,\n            }\n        } else if (selectedArgBase.type.startsWith(\"dict<\")) {\n            const itemProps = getArgProps((selectedArgBase as CMDDictArgBase).item);\n            if (!itemProps) {\n                return undefined;\n            }\n            return {\n                title: \"Dict Element Props\",\n                props: itemProps.props,\n            }\n        } else if (selectedArgBase.type.startsWith(\"array<\")) {\n            const itemProps = getArgProps((selectedArgBase as CMDArrayArgBase).item);\n            if (!itemProps) {\n                return undefined;\n            }\n            return {\n                title: \"Array Element Props\",\n                props: itemProps.props,\n            }\n        } else {\n            return undefined;\n        }\n    }\n\n    const getSelectedArg = (stack: ArgIdx[]): CMDArg | undefined => {\n        if (stack.length === 0) {\n            return undefined;\n        } else {\n            let args: CMDArg[] = [...props.args]\n            let selectedArg: CMDArg | undefined = undefined;\n            for (const i in stack) {\n                const argVar = stack[i].var;\n                selectedArg = args.find(arg => arg.var === argVar)\n                if (!selectedArg) {\n                    break\n                }\n                args = getArgProps(selectedArg)?.props ?? [];\n            }\n            return selectedArg\n        }\n    }\n\n    useEffect(() => {\n        setArgIdxStack([]);\n    }, [props.commandUrl]);\n\n    useEffect(() => {\n        // update argument idx stack \n        const stack = [...argIdxStack];\n        while (stack.length > 0 && !getSelectedArg(stack)) {\n            stack.pop()\n        }\n        setArgIdxStack(stack);\n    }, [props.args, props.clsArgDefineMap])\n\n    const handleSelectSubArg = (subArgVar: string) => {\n        let subArg\n        if (argIdxStack.length > 0) {\n            const arg = getSelectedArg(argIdxStack);\n            if (!arg) {\n                return\n            }\n            subArg = getArgProps(arg)?.props.find(a => a.var === subArgVar)\n        } else {\n            subArg = props.args.find(a => a.var === subArgVar)\n        }\n\n        if (!subArg) {\n            return\n        }\n        const argIdx: ArgIdx = {\n            var: subArg.var,\n            displayKey: subArg.options[0],\n        }\n        if (argIdxStack.length === 0) {\n            if (argIdx.displayKey.length === 1) {\n                argIdx.displayKey = `-${argIdx.displayKey}`\n            } else {\n                argIdx.displayKey = `--${argIdx.displayKey}`\n            }\n        }\n\n        let argType = subArg.type;\n        if (argType.startsWith(\"@\")) {\n            argType = props.clsArgDefineMap[(subArg as CMDClsArg).clsName].type\n        }\n        if (argType.startsWith(\"dict<\")) {\n            argIdx.displayKey += \"{}\"\n        } else if (argType.startsWith(\"array<\")) {\n            argIdx.displayKey += \"[]\"\n        }\n\n\n        setArgIdxStack([...argIdxStack, argIdx]);\n    }\n\n    const handleChangeArgIdStack = (end: number) => {\n        setArgIdxStack(argIdxStack.slice(0, end));\n    }\n\n    const buildArgumentReviewer = () => {\n        const selectedArg = getSelectedArg(argIdxStack)\n        if (!selectedArg) {\n            return (<></>)\n        }\n\n        const stage = selectedArg.stage\n\n        return (\n            <React.Fragment>\n                <Box sx={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"flex-start\",\n                    justifyContent: \"flex-start\"\n                }}>\n                    <ArgNavBar argIdxStack={argIdxStack} onChangeArgIdStack={handleChangeArgIdStack} />\n                    {stage === \"Stable\" && <StableTypography\n                        sx={{ flexShrink: 0 }}\n                    >\n                        {stage}\n                    </StableTypography>}\n                    {stage === \"Preview\" && <PreviewTypography\n                        sx={{ flexShrink: 0 }}\n                    >\n                        {stage}\n                    </PreviewTypography>}\n                    {stage === \"Experimental\" && <ExperimentalTypography\n                        sx={{ flexShrink: 0 }}\n                    >\n                        {stage}\n                    </ExperimentalTypography>}\n                </Box>\n\n                <ArgumentReviewer arg={selectedArg} depth={argIdxStack.length} />\n            </React.Fragment>\n        )\n    }\n\n    const buildArgumentPropsReviewer = () => {\n        if (argIdxStack.length === 0) {\n            if (props.args.length === 0) {\n                return (<></>)\n            }\n            return (<ArgumentPropsReviewer\n                title={\"Argument Groups\"}\n                args={props.args}\n                depth={argIdxStack.length}\n                onSelectSubArg={handleSelectSubArg}\n            />)\n        } else {\n            const selectedArg = getSelectedArg(argIdxStack)\n            if (!selectedArg) {\n                return (<></>)\n            }\n            const argProps = getArgProps(selectedArg)\n            if (!argProps) {\n                return (<></>)\n            }\n            return (<ArgumentPropsReviewer\n                title={argProps.title}\n                args={argProps.props}\n                depth={argIdxStack.length}\n                onSelectSubArg={handleSelectSubArg}\n            />)\n        }\n    }\n\n    return (<React.Fragment>\n        {argIdxStack.length > 0 && <React.Fragment>\n            {buildArgumentReviewer()}\n        </React.Fragment>}\n        <React.Fragment>\n            {buildArgumentPropsReviewer()}\n        </React.Fragment>\n\n    </React.Fragment>)\n}\n\n\nconst NavBarItemTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 14,\n    fontWeight: 400,\n}))\n\nconst NavBarItemHightLightedTypography = styled(NavBarItemTypography)<TypographyProps>(({ theme }) => ({\n    color: '#5d64cf',\n}))\n\nfunction ArgNavBar(props: {\n    argIdxStack: ArgIdx[],\n    onChangeArgIdStack: (end: number) => void,\n}) {\n\n    return (\n        <React.Fragment>\n            <Box\n                sx={{\n                    flexGrow: 1,\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-start\",\n                    mt: 1, mb: 0.5, mr: 2,\n                }}>\n                <ButtonBase key=\"Back\" onClick={() => {\n                    props.onChangeArgIdStack(0)\n                }}>\n                    <ArrowBackIosIcon sx={{ fontSize: 14 }} />\n                </ButtonBase>\n                {props.argIdxStack.slice(0, -1).map((argIdx, index) => (\n                    <ButtonBase\n                        key={`${index}`}\n                        onClick={() => {\n                            props.onChangeArgIdStack(index + 1)\n                        }}\n                    >\n                        <NavBarItemTypography sx={{ flexShrink: 0 }} >{index > 0 ? `.${argIdx.displayKey}` : argIdx.displayKey}</NavBarItemTypography>\n                    </ButtonBase>\n                ))}\n                <ButtonBase\n                        key={`${props.argIdxStack.length-1}`}\n                        onClick={() => {\n                            props.onChangeArgIdStack(props.argIdxStack.length)\n                        }}\n                    >\n                        <NavBarItemHightLightedTypography sx={{ flexShrink: 0 }} >{props.argIdxStack.length > 1 ? `.${props.argIdxStack[props.argIdxStack.length-1].displayKey}` : props.argIdxStack[props.argIdxStack.length-1].displayKey}</NavBarItemHightLightedTypography>\n                </ButtonBase>\n            </Box>\n        </React.Fragment>\n    )\n}\n\nconst spliceArgOptionsString = (arg: CMDArg, depth: number) => {\n    return arg.options.map((option) => {\n        if (depth === 0) {\n            if (option.length === 1) {\n                return '-' + option;\n            } else {\n                return '--' + option;\n            }\n        } else {\n            return '.' + option;\n        }\n    }).join(\" \")\n}\n\n\nconst ArgNameTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n    fontSize: 26,\n    fontWeight: 700,\n}))\n\nconst ArgTypeTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n    fontSize: 16,\n    fontWeight: 700,\n}))\n\nconst ArgRequiredTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: '#fad105',\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n    fontSize: 16,\n    fontWeight: 200,\n}))\n\nfunction ArgumentReviewer(props: {\n    arg: CMDArg,\n    depth: number,\n}) {\n    const buildArgOptionsString = () => {\n        const argOptionsString = spliceArgOptionsString(props.arg, props.depth - 1);\n        return (<ArgNameTypography>{argOptionsString}</ArgNameTypography>)\n    }\n\n    return (<React.Fragment>\n        <Box\n            sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"stretch\",\n                justifyContent: \"flex-start\",\n                mt: 1,\n                mb: 2\n            }}>\n            {buildArgOptionsString()}\n            <Box sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"flex-start\",\n                ml: 6,\n            }}>\n                <ArgTypeTypography>{`/${props.arg.type}/`}</ArgTypeTypography>\n                <Box sx={{ flexGrow: 1 }} />\n                {props.arg.required && <ArgRequiredTypography>[Required]</ArgRequiredTypography>}\n            </Box>\n            {props.arg.help?.short && <ShortHelpTypography sx={{ ml: 6, mt: 1.5 }}> {props.arg.help?.short} </ShortHelpTypography>}\n            {!(props.arg.help?.short) && <ShortHelpPlaceHolderTypography sx={{ ml: 6, mt: 2 }}>Please add argument short summery!</ShortHelpPlaceHolderTypography>}\n            {props.arg.help?.lines && <Box sx={{ ml: 6, mt: 1, mb: 1 }}>\n                {props.arg.help.lines.map((line, idx) => (<LongHelpTypography key={idx}>{line}</LongHelpTypography>))}\n            </Box>}\n        </Box>\n    </React.Fragment>)\n}\n\n\ninterface ArgGroup {\n    name: string,\n    args: CMDArg[],\n}\n\nconst PropArgTypeTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 10,\n    fontWeight: 400,\n}))\n\nconst PropRequiredTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: '#dba339',\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 10,\n    fontWeight: 400,\n}))\n\nconst ArgGroupTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n    fontSize: 18,\n    fontWeight: 200,\n}))\n\nconst PropArgOptionTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n    fontSize: 16,\n    fontWeight: 700,\n}))\n\nconst PropArgShortSummeryTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n    fontSize: 14,\n    fontStyle: \"italic\",\n    fontWeight: 400,\n}))\n\nfunction ArgumentPropsReviewer(props: {\n    title: string,\n    args: CMDArg[],\n    depth: number,\n    onSelectSubArg: (subArgVar: string) => void,\n}) {\n    const groupArgs: { [name: string]: CMDArg[] } = {};\n    props.args.forEach((arg) => {\n        const groupName: string = arg.group.length > 0 ? arg.group : \"\";\n        if (!(groupName in groupArgs)) {\n            groupArgs[groupName] = []\n        }\n        groupArgs[groupName].push(arg)\n    })\n    const groups: ArgGroup[] = []\n\n    for (const groupName in groupArgs) {\n        groupArgs[groupName].sort((a, b) => {\n            if (a.required && !b.required) {\n                return -1\n            } else if (!a.required && b.required) {\n                return 1\n            }\n            return a.options[0].localeCompare(b.options[0])\n        });\n        groups.push({\n            name: groupName,\n            args: groupArgs[groupName],\n        })\n    }\n    groups.sort((a, b) => a.name.localeCompare(b.name));\n\n    const buildArg = (arg: CMDArg, idx: number) => {\n        const argOptionsString = spliceArgOptionsString(arg, props.depth);\n        return (<Box key={`group-arg-${idx}`}\n            sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"stretch\",\n                justifyContent: \"flex-start\",\n                mb: 2\n            }}>\n            <Box sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"flex-end\",\n                justifyContent: \"flex-start\",\n            }}>\n                <ButtonBase onClick={() => {\n                    props.onSelectSubArg(arg.var)\n                }}>\n                    <PropArgOptionTypography sx={{ flexShrink: 0 }}>{argOptionsString}</PropArgOptionTypography>\n\n                </ButtonBase>\n                <Box sx={{ flexGrow: 1 }} />\n                {arg.stage === \"Preview\" && <SmallPreviewTypography\n                    sx={{ flexShrink: 0 }}\n                >\n                    {arg.stage}\n                </SmallPreviewTypography>}\n                {arg.stage === \"Experimental\" && <SmallExperimentalTypography\n                    sx={{ flexShrink: 0 }}\n                >\n                    {arg.stage}\n                </SmallExperimentalTypography>}\n            </Box>\n            <Box sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"flex-start\",\n                justifyContent: \"flex-start\"\n            }}>\n                <Box sx={{\n                    width: 300,\n                    flexShrink: 0,\n                    flexDirection: \"row\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                }}>\n                    <PropArgTypeTypography sx={{\n                        flexShrink: 0,\n                    }}>{`/${arg.type}/`}</PropArgTypeTypography>\n                    <Box sx={{ flexGrow: 1 }} />\n                    {arg.required && <PropRequiredTypography>[Required]</PropRequiredTypography>}\n                </Box>\n                {arg.help && <Box sx={{\n                    ml: 4\n                }}>\n                    <PropArgShortSummeryTypography>{arg.help.short}</PropArgShortSummeryTypography>\n                </Box>}\n            </Box>\n\n        </Box>)\n    }\n\n    const buildArgGroup = (group: ArgGroup, idx: number) => {\n        return (\n            <Box\n                key={`group-${idx}`}\n                sx={{\n                    flexGrow: 1,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"stretch\",\n                    justifyContent: \"flex-start\",\n                    ml: 2, mr: 2, mb: 1\n                }}\n            >\n                <Box sx={{ flexShrink: 0, ml: 2, p: 1 }} >\n                    <ArgGroupTypography id={`argGroup-${idx}-header`}>\n                        {group.name.length > 0 ? `${group.name} Group` : \"Default Group\"}\n                    </ArgGroupTypography>\n                </Box>\n                <Box sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'stretch',\n                    justifyContent: 'flex-start',\n                    ml: 3,\n                    mr: 3,\n                }}>\n                    {group.args.map(buildArg)}\n                </Box>\n            </Box>)\n    }\n\n    return (<React.Fragment>\n        <Box sx={{\n            p: 2\n        }}>\n            <SubtitleTypography>{props.title}</SubtitleTypography>\n        </Box>\n        {groups.map(buildArgGroup)}\n    </React.Fragment>)\n}\n\n\ntype CMDArgHelp = {\n    short: string\n    lines?: string[]\n    refCommands?: string[]\n}\n\ntype CMDArgDefault<T> = {\n    value: T | null\n}\n\ntype CMDArgBlank<T> = {\n    value: T | null\n}\n\ntype CMDArgEnumItem<T> = {\n    name: string\n    hide: boolean\n    value: T\n}\n\ntype CMDArgEnum<T> = {\n    items: CMDArgEnumItem<T>[]\n}\n\ninterface CMDArgBase {\n    type: string\n}\n\ninterface CMDArg extends CMDArgBase {\n    var: string\n    options: string[]\n\n    required: boolean\n    stage: \"Stable\" | \"Preview\" | \"Experimental\"\n    hide: boolean\n    group: string\n    help?: CMDArgHelp\n\n    default?: CMDArgDefault<any>\n    blank?: CMDArgBlank<any>\n    idPart?: string\n}\n\ninterface CMDArgT<T> extends CMDArg {\n    default?: CMDArgDefault<T>\n    blank?: CMDArgBlank<T>\n}\n\n// type: starts with \"@\"\ninterface CMDClsArgBase extends CMDArgBase {\n    clsName: string\n}\n\ninterface CMDClsArg extends CMDClsArgBase, CMDArg {\n    singularOptions?: string[]  // for list use only\n}\n\n// type: string\ninterface CMDStringArgBase extends CMDArgBase {\n    enum?: CMDArgEnum<string>\n    // fmt?: CMDStringFormat\n}\n\ninterface CMDStringArg extends CMDStringArgBase, CMDArgT<string> { }\n\n// type: byte\ninterface CMDByteArgBase extends CMDStringArgBase { }\ninterface CMDByteArg extends CMDByteArgBase, CMDStringArg { }\n\n// type: binary\ninterface CMDBinaryArgBase extends CMDStringArgBase { }\ninterface CMDBinaryArg extends CMDBinaryArgBase, CMDStringArg { }\n\n// type: duration\ninterface CMDDurationArgBase extends CMDStringArgBase { }\ninterface CMDDurationArg extends CMDDurationArgBase, CMDStringArg { }\n\n// type: date  As defined by full-date - https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\ninterface CMDDateArgBase extends CMDStringArgBase { }\ninterface CMDDateArg extends CMDDateArgBase, CMDStringArg { }\n\n// type: date-time  As defined by date-time - https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\ninterface CMDDateTimeArgBase extends CMDStringArgBase { }\ninterface CMDDateTimeArg extends CMDDateTimeArgBase, CMDStringArg { }\n\n// type: uuid \ninterface CMDUuidArgBase extends CMDStringArgBase { }\ninterface CMDUuidArg extends CMDUuidArgBase, CMDStringArg { }\n\n// type: password \ninterface CMDPasswordArgBase extends CMDStringArgBase { }\ninterface CMDPasswordArg extends CMDPasswordArgBase, CMDStringArg { }\n\n// type: SubscriptionId\ninterface CMDSubscriptionIdArgBase extends CMDStringArgBase { }\ninterface CMDSubscriptionIdArg extends CMDSubscriptionIdArgBase, CMDStringArg { }\n\n// type: ResourceGroupName \ninterface CMDResourceGroupNameArgBase extends CMDStringArgBase { }\ninterface CMDResourceGroupNameArg extends CMDResourceGroupNameArgBase, CMDStringArg { }\n\n// type: ResourceId \ninterface CMDResourceIdNameArgBase extends CMDStringArgBase { }\ninterface CMDResourceIdNameArg extends CMDResourceIdNameArgBase, CMDStringArg { }\n\n// type: ResourceLocation\ninterface CMDResourceLocationNameArgBase extends CMDStringArgBase { }\ninterface CMDResourceLocationNameArg extends CMDResourceLocationNameArgBase, CMDStringArg { }\n\n\ninterface CMDNumberArgBase extends CMDArgBase {\n    enum?: CMDArgEnum<number>\n    // fmt?: CMDIntegerFormat\n}\ninterface CMDNumberArg extends CMDNumberArgBase, CMDArgT<number> { }\n\n// type: integer\ninterface CMDIntegerArgBase extends CMDNumberArgBase { }\ninterface CMDIntegerArg extends CMDIntegerArgBase, CMDNumberArg { }\n\n// type: integer32\ninterface CMDInteger32ArgBase extends CMDNumberArgBase { }\ninterface CMDInteger32Arg extends CMDInteger32ArgBase, CMDNumberArg { }\n\n// type: integer32\ninterface CMDInteger64ArgBase extends CMDNumberArgBase { }\ninterface CMDInteger64Arg extends CMDInteger64ArgBase, CMDNumberArg { }\n\n// type: float\ninterface CMDFloatArgBase extends CMDNumberArgBase { }\ninterface CMDFloatArg extends CMDFloatArgBase, CMDNumberArg { }\n\n// type: float32\ninterface CMDFloat32ArgBase extends CMDNumberArgBase { }\ninterface CMDFloat32Arg extends CMDFloat32ArgBase, CMDNumberArg { }\n\n// type: float64\ninterface CMDFloat64ArgBase extends CMDNumberArgBase { }\ninterface CMDFloat64Arg extends CMDFloat64ArgBase, CMDNumberArg { }\n\n// type: boolean\ninterface CMDBooleanArgBase extends CMDArgBase { }\ninterface CMDBooleanArg extends CMDBooleanArgBase, CMDArgT<boolean> { }\n\n// type: object\ninterface CMDObjectArgBase extends CMDArgBase {\n    // fmt?: CMDObjectFormat\n    args: CMDArg[]\n}\n\ninterface CMDObjectArg extends CMDObjectArgBase, CMDArg { }\n// type: dict\ninterface CMDDictArgBase extends CMDArgBase {\n    // fmt?: CMDDictFormat\n    item: CMDArgBase\n}\ninterface CMDDictArg extends CMDDictArgBase, CMDArg { }\n\n// type: array\ninterface CMDArrayArgBase extends CMDArgBase {\n    // fmt?: CMDArrayFormat\n    item: CMDArgBase\n}\n\ninterface CMDArrayArg extends CMDArrayArgBase, CMDArg {\n    singularOptions?: string[]\n}\n\ntype ClsArgDefinitionMap = {\n    [clsName: string]: CMDArgBase\n}\n\nfunction decodeArgEnumItem<T>(response: any): CMDArgEnumItem<T> {\n    return {\n        name: response.name,\n        hide: response.hide ?? false,\n        value: response.value as T,\n    }\n}\n\nfunction decodeArgEnum<T>(response: any): CMDArgEnum<T> {\n    let argEnum: CMDArgEnum<T> = {\n        items: response.items.map((item: any) => decodeArgEnumItem<T>(item))\n    }\n    return argEnum;\n}\n\nfunction decodeArgBase(response: any): { argBase: CMDArgBase, clsDefineMap: ClsArgDefinitionMap } {\n    let argBase: any = {\n        type: response.type\n    }\n\n    let clsDefineMap: ClsArgDefinitionMap = {};\n\n    switch (response.type) {\n        case \"byte\":\n        case \"binary\":\n        case \"duration\":\n        case \"date\":\n        case \"date-time\":\n        case \"uuid\":\n        case \"password\":\n        case \"SubscriptionId\":\n        case \"ResourceGroupName\":\n        case \"ResourceId\":\n        case \"ResourceLocation\":\n        case \"string\":\n            if (response.enum) {\n                argBase = {\n                    ...argBase,\n                    enum: decodeArgEnum<string>(response.enum),\n                }\n            }\n            break\n        case \"integer32\":\n        case \"integer64\":\n        case \"integer\":\n            if (response.enum) {\n                argBase = {\n                    ...argBase,\n                    enum: decodeArgEnum<number>(response.enum),\n                }\n            }\n            break\n        case \"float32\":\n        case \"float64\":\n        case \"float\":\n            if (response.enum) {\n                argBase = {\n                    ...argBase,\n                    enum: decodeArgEnum<number>(response.enum),\n                }\n            }\n            break\n        case \"boolean\":\n            break\n        case \"object\":\n            if (response.args && Array.isArray(response.args) && response.args.length > 0) {\n                const args: CMDArg[] = response.args.map((resSubArg: any) => {\n                    const subArgParse = decodeArg(resSubArg);\n                    clsDefineMap = {\n                        ...clsDefineMap,\n                        ...subArgParse.clsDefineMap,\n                    }\n                    return subArgParse.arg\n                })\n                argBase = {\n                    ...argBase,\n                    args: args,\n                }\n            } else if (response.additionalProps && response.additionalProps.item) {\n                // Convert additionalProps to dict argBaseType\n                // TODO: split it on service side\n                const itemArgBaseParse = decodeArgBase(response.additionalProps.item);\n                clsDefineMap = {\n                    ...clsDefineMap,\n                    ...itemArgBaseParse.clsDefineMap,\n                }\n                const argBaseType = `dict<string, ${itemArgBaseParse.argBase.type}>`\n                argBase = {\n                    ...argBase,\n                    type: argBaseType,\n                    item: itemArgBaseParse.argBase\n                }\n            } else {\n                throw Error(\"Invalid object arguments, neither args nor additionalProps exist\")\n            }\n\n            if (response.cls) {\n                const clsName = response.cls;\n                clsDefineMap[clsName] = argBase;\n                argBase = {\n                    type: `@${response.cls}`,\n                    clsName: clsName\n                }\n            }\n            break\n        default:\n            if (response.type.startsWith(\"array<\")) {\n                if (response.item) {\n                    const itemArgBaseParse = decodeArgBase(response.item);\n                    clsDefineMap = {\n                        ...clsDefineMap,\n                        ...itemArgBaseParse.clsDefineMap,\n                    }\n                    argBase = {\n                        ...argBase,\n                        item: itemArgBaseParse.argBase,\n                    }\n                } else {\n                    throw Error(\"Invalid array object. Item is not defined\");\n                }\n\n                if (response.cls) {\n                    const clsName = response.cls;\n                    clsDefineMap[clsName] = argBase;\n                    argBase = {\n                        type: `@${response.cls}`,\n                        clsName: clsName\n                    }\n                }\n            } else if (response.type.startsWith(\"@\")) {\n                argBase[\"clsName\"] = response.type.slice(1);\n            } else {\n                console.error(`Unknown type '${response.type}'`)\n                throw Error(`Unknown type '${response.type}'`)\n            }\n    }\n\n    return {\n        argBase: argBase,\n        clsDefineMap: clsDefineMap,\n    };\n}\n\nfunction decodeArgHelp(response: any): CMDArgHelp {\n    return {\n        short: response.short,\n        lines: response.lines,\n        refCommands: response.refCommands,\n    }\n}\n\nfunction decodeArg(response: any): { arg: CMDArg, clsDefineMap: ClsArgDefinitionMap } {\n    let { argBase, clsDefineMap } = decodeArgBase(response);\n    const options = (response.options as string[]).sort((a, b) => a.length - b.length).reverse();\n    const help = response.help ? decodeArgHelp(response.help) : undefined;\n    let arg: any = {\n        ...argBase,\n        var: response.var as string,\n        options: options,\n        required: (response.required ?? false) as boolean,\n        stage: (response.stage ?? \"Stable\") as (\"Stable\" | \"Preview\" | \"Experimental\"),\n        hide: (response.hide ?? false) as boolean,\n        group: (response.group ?? \"\") as string,\n        help: help,\n        default: response.default,\n        blank: response.blank,\n        idPart: response.idPart,\n    }\n\n    switch (argBase.type) {\n        case \"byte\":\n        case \"binary\":\n        case \"duration\":\n        case \"date\":\n        case \"date-time\":\n        case \"uuid\":\n        case \"password\":\n        case \"SubscriptionId\":\n        case \"ResourceGroupName\":\n        case \"ResourceId\":\n        case \"ResourceLocation\":\n        case \"string\":\n            break\n        case \"integer32\":\n        case \"integer64\":\n        case \"integer\":\n            break\n        case \"float32\":\n        case \"float64\":\n        case \"float\":\n            break\n        case \"boolean\":\n            break\n        case \"object\":\n            break\n        default:\n            if (argBase.type.startsWith(\"dict<\")) {\n                // dict type\n            } else if (argBase.type.startsWith(\"array<\")) {\n                // array type\n                if (response.singularOptions) {\n                    arg = {\n                        ...arg,\n                        singularOptions: response.singularOptions as string[],\n                    }\n                }\n            } else if (argBase.type.startsWith(\"@\")) {\n                if (response.singularOptions) {\n                    arg = {\n                        ...arg,\n                        singularOptions: response.singularOptions as string[],\n                    }\n                }\n            } else {\n                console.error(`Unknown type '${argBase.type}'`)\n                throw Error(`Unknown type '${argBase.type}'`)\n            }\n    }\n\n    return {\n        arg: arg,\n        clsDefineMap: clsDefineMap,\n    }\n}\n\nfunction decodeResponse(responseCommand: any): { args: CMDArg[], clsDefineMap: ClsArgDefinitionMap } {\n    let clsDefineMap: ClsArgDefinitionMap = {};\n    const args: CMDArg[] = [];\n    responseCommand.argGroups.forEach((argGroup: any) => {\n        args.push(...argGroup.args.map((resArg: any) => {\n            const argDecode = decodeArg(resArg);\n            clsDefineMap = {\n                ...clsDefineMap,\n                ...argDecode.clsDefineMap\n            }\n            return argDecode.arg;\n        }))\n    })\n    return {\n        args: args,\n        clsDefineMap: clsDefineMap,\n    }\n}\n\nexport default WSEditorCommandArgumentsContent;\n","import { Alert, Box, Button, Card, CardActions, CardContent, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, Accordion, InputLabel, LinearProgress, Radio, RadioGroup, TextField, Typography, TypographyProps, AccordionSummary, AccordionDetails, IconButton, Input, InputAdornment, InputBase, AccordionActions, Paper, PaperProps, AccordionSummaryProps, Tooltip } from '@mui/material';\r\nimport { styled } from '@mui/system';\r\nimport axios from 'axios';\r\nimport * as React from 'react';\r\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\r\nimport { NameTypography, ShortHelpTypography, ShortHelpPlaceHolderTypography, LongHelpTypography, StableTypography, PreviewTypography, ExperimentalTypography, SubtitleTypography, CardTitleTypography } from './WSEditorTheme';\r\nimport DoDisturbOnRoundedIcon from '@mui/icons-material/DoDisturbOnRounded';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport KeyboardDoubleArrowRightIcon from '@mui/icons-material/KeyboardDoubleArrowRight';\r\nimport LabelIcon from '@mui/icons-material/Label';\r\nimport WSEditorCommandArgumentsContent from './WSEditorCommandArgumentsContent';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\ninterface Example {\r\n    name: string,\r\n    commands: string[],\r\n}\r\n\r\ninterface Resource {\r\n    id: string,\r\n    version: string,\r\n    swagger: string,\r\n}\r\n\r\ninterface Command {\r\n    id: string\r\n    names: string[]\r\n    help?: {\r\n        short: string\r\n        lines?: string[]\r\n    }\r\n    stage: \"Stable\" | \"Preview\" | \"Experimental\"\r\n    version: string\r\n    examples?: Example[]\r\n    resources: Resource[]\r\n}\r\n\r\ninterface ResponseCommand {\r\n    names: string[],\r\n    help?: {\r\n        short: string\r\n        lines?: string[]\r\n    }\r\n    stage?: \"Stable\" | \"Preview\" | \"Experimental\"\r\n    version: string,\r\n    examples?: Example[],\r\n    resources: Resource[],\r\n}\r\n\r\ninterface ResponseCommands {\r\n    [name: string]: ResponseCommand\r\n}\r\n\r\ninterface WSEditorCommandContentProps {\r\n    workspaceUrl: string\r\n    command: Command\r\n    onUpdateCommand: (command: Command | null) => void\r\n}\r\n\r\ninterface WSEditorCommandContentState {\r\n    displayCommandDialog: boolean\r\n    displayExampleDialog: boolean\r\n    displayCommandDeleteDialog: boolean\r\n    exampleIdx?: number\r\n}\r\n\r\nconst commandPrefix = 'az '\r\n\r\nconst ExampleCommandHeaderTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\r\n    color: theme.palette.primary.main,\r\n    fontFamily: \"'Work Sans', sans-serif\",\r\n    fontSize: 14,\r\n    fontWeight: 400,\r\n}))\r\n\r\nconst ExampleCommandBodyTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\r\n    color: theme.palette.primary.main,\r\n    fontFamily: \"'Work Sans', sans-serif\",\r\n    fontSize: 14,\r\n    fontWeight: 400,\r\n}))\r\n\r\nconst ExampleEditTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\r\n    color: \"#5d64cf\",\r\n    fontFamily: \"'Work Sans', sans-serif\",\r\n    fontSize: 14,\r\n    fontWeight: 400,\r\n}));\r\n\r\nconst ExampleAccordionSummary = styled((props: AccordionSummaryProps) => (\r\n    <MuiAccordionSummary\r\n        expandIcon={<LabelIcon fontSize=\"small\" color=\"primary\" />}\r\n        {...props}\r\n    />\r\n))(({ theme }) => ({\r\n    flexDirection: 'row-reverse',\r\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\r\n        transform: 'rotate(0deg)',\r\n    },\r\n}));\r\n\r\n\r\nclass WSEditorCommandContent extends React.Component<WSEditorCommandContentProps, WSEditorCommandContentState> {\r\n\r\n    constructor(props: WSEditorCommandContentProps) {\r\n        super(props);\r\n        this.state = {\r\n            displayCommandDialog: false,\r\n            displayExampleDialog: false,\r\n            displayCommandDeleteDialog: false,\r\n        }\r\n    }\r\n\r\n    onCommandDialogDisplay = () => {\r\n        this.setState({\r\n            displayCommandDialog: true,\r\n        })\r\n    }\r\n\r\n    onCommandDeleteDialogDisplay = () => {\r\n        this.setState({\r\n            displayCommandDeleteDialog: true,\r\n        })\r\n    }\r\n\r\n    handleCommandDialogClose = (newCommand?: Command) => {\r\n        this.setState({\r\n            displayCommandDialog: false,\r\n        })\r\n        if (newCommand) {\r\n            this.props.onUpdateCommand(newCommand!);\r\n        }\r\n    }\r\n\r\n    handleCommandDeleteDialogClose = (deleted: boolean) => {\r\n        this.setState({\r\n            displayCommandDeleteDialog: false,\r\n        })\r\n        if (deleted) {\r\n            this.props.onUpdateCommand(null);\r\n        }\r\n    }\r\n\r\n    onExampleDialogDisplay = (idx?: number) => {\r\n        this.setState({\r\n            displayExampleDialog: true,\r\n            exampleIdx: idx,\r\n        })\r\n    }\r\n\r\n    handleExampleDialogClose = (newCommand?: Command) => {\r\n        this.setState({\r\n            displayExampleDialog: false,\r\n        })\r\n        if (newCommand) {\r\n            this.props.onUpdateCommand(newCommand!);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { workspaceUrl, command } = this.props;\r\n        const name = commandPrefix + this.props.command.names.join(' ');\r\n        const shortHelp = this.props.command.help?.short;\r\n        const longHelp = this.props.command.help?.lines?.join('\\n');\r\n        const lines: string[] = this.props.command.help?.lines ?? [];\r\n        const stage = this.props.command.stage;\r\n        const version = this.props.command.version;\r\n        const examples: Example[] = this.props.command.examples ?? [];\r\n        const commandUrl = `${workspaceUrl}/CommandTree/Nodes/aaz/` + command.names.slice(0, -1).join('/') + '/Leaves/' + command.names[command.names.length - 1];\r\n        const { displayCommandDialog, displayExampleDialog, displayCommandDeleteDialog, exampleIdx } = this.state;\r\n\r\n        const buildExampleView = (example: Example, idx: number) => {\r\n            const buildCommand = (exampleCommand: string, cmdIdx: number) => {\r\n                return (<Box key={`example-${idx}-command-${cmdIdx}`} sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: 'row',\r\n                    alignItems: 'flex-start',\r\n                    justifyContent: 'flex-start',\r\n                }}>\r\n                    <Box component=\"span\" sx={{\r\n                        flexShrink: 0,\r\n                        display: \"flex\",\r\n                        flexDirection: 'row', alignItems: 'center', justifyContent: 'flex-start',\r\n                    }}>\r\n                        <KeyboardDoubleArrowRightIcon fontSize=\"small\" />\r\n                        <ExampleCommandHeaderTypography sx={{ flexShrink: 0 }}>{commandPrefix}</ExampleCommandHeaderTypography>\r\n                    </Box>\r\n                    <Box component=\"span\" sx={{\r\n                        ml: 0.8,\r\n                    }}>\r\n                        <ExampleCommandBodyTypography>{exampleCommand}</ExampleCommandBodyTypography>\r\n                    </Box>\r\n                </Box>)\r\n            }\r\n            return (\r\n                <Accordion\r\n                    elevation={0}\r\n                    expanded\r\n                    key={`example-${idx}`}\r\n                    onDoubleClick={() => { this.onExampleDialogDisplay(idx) }}\r\n                >\r\n                    <ExampleAccordionSummary\r\n                        id={`example-${idx}-header`}\r\n                    >\r\n                        <Box sx={{\r\n                            ml: 1,\r\n                            flexGrow: 1,\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            alignItems: \"center\",\r\n                        }}>\r\n                            <SubtitleTypography sx={{ flexShrink: 0 }} >{example.name}</SubtitleTypography>\r\n                            {/* <Box sx={{ flexGrow: 1 }} /> */}\r\n                            <Button sx={{ flexShrink: 0, ml: 3 }}\r\n                                startIcon={<EditIcon color=\"info\" fontSize='small' />}\r\n                                onClick={() => { this.onExampleDialogDisplay(idx) }}\r\n                            >\r\n                                <ExampleEditTypography>Edit</ExampleEditTypography>\r\n                            </Button>\r\n                        </Box>\r\n                    </ExampleAccordionSummary>\r\n                    <AccordionDetails sx={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'stretch',\r\n                        justifyContent: 'flex-start',\r\n                        ml: 3,\r\n                        mr: 3,\r\n                        paddingTop: 0,\r\n                    }}>\r\n                        {example.commands.map(buildCommand)}\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Box sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'stretch',\r\n                }}>\r\n                    <Card\r\n                        onDoubleClick={this.onCommandDialogDisplay}\r\n                        elevation={3}\r\n                        sx={{\r\n                            flexGrow: 1,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            p: 2\r\n                        }}>\r\n                        <CardContent sx={{\r\n                            flex: '1 0 auto',\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'stretch',\r\n                        }}>\r\n                            <Box sx={{\r\n                                mb: 2,\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                alignItems: \"center\"\r\n                            }}>\r\n                                <CardTitleTypography sx={{ flexShrink: 0 }}>\r\n                                    [ COMMAND ]\r\n                                </CardTitleTypography>\r\n                                <Box sx={{ flexGrow: 1 }} />\r\n                                {stage === \"Stable\" && <StableTypography\r\n                                    sx={{ flexShrink: 0 }}\r\n                                >\r\n                                    {`v${version}`}\r\n                                </StableTypography>}\r\n                                {stage === \"Preview\" && <PreviewTypography\r\n                                    sx={{ flexShrink: 0 }}\r\n                                >\r\n                                    {`v${version}`}\r\n                                </PreviewTypography>}\r\n                                {stage === \"Experimental\" && <ExperimentalTypography\r\n                                    sx={{ flexShrink: 0 }}\r\n                                >\r\n                                    {`v${version}`}\r\n                                </ExperimentalTypography>}\r\n                            </Box>\r\n\r\n                            <NameTypography sx={{ mt: 1 }}>\r\n                                {name}\r\n                            </NameTypography>\r\n                            {shortHelp && <ShortHelpTypography sx={{ ml: 6, mt: 2 }}> {shortHelp} </ShortHelpTypography>}\r\n                            {!shortHelp && <ShortHelpPlaceHolderTypography sx={{ ml: 6, mt: 2 }}>Please add command short summery!</ShortHelpPlaceHolderTypography>}\r\n                            {longHelp && <Box sx={{ ml: 6, mt: 1, mb: 1 }}>\r\n                                {lines.map((line, idx) => (<LongHelpTypography key={idx}>{line}</LongHelpTypography>))}\r\n                            </Box>}\r\n                        </CardContent>\r\n                        <CardActions sx={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"row-reverse\",\r\n                            alignContent: \"center\",\r\n                            justifyContent: \"flex-start\"\r\n                        }}>\r\n                            <Box sx={{\r\n                                display: \"flex\",\r\n                                flexDirection: \"row\",\r\n                                alignContent: \"center\",\r\n                                justifyContent: \"flex-start\"\r\n                            }}>\r\n\r\n                                <Button\r\n                                    variant='contained' size=\"small\" color='info' disableElevation\r\n                                    onClick={this.onCommandDialogDisplay}\r\n                                    sx={{ mr: 2 }}\r\n                                >\r\n                                    <Typography variant='body2'>\r\n                                        Edit\r\n                                    </Typography>\r\n                                </Button>\r\n                                <Button\r\n                                    variant='outlined' size=\"small\" color='info'\r\n                                    onClick={this.onCommandDeleteDialogDisplay}\r\n                                    sx={{ mr: 2 }}\r\n                                >\r\n                                    <Typography variant='body2'>\r\n                                        Delete\r\n                                    </Typography>\r\n                                </Button>\r\n                                <Button\r\n                                    variant='outlined' size=\"small\" color='info'\r\n                                    sx={{ mr: 2 }}\r\n                                    disabled\r\n                                >\r\n                                    <Typography variant='body2'>\r\n                                        Try\r\n                                    </Typography>\r\n                                </Button>\r\n                            </Box>\r\n                        </CardActions>\r\n                    </Card>\r\n\r\n                    <Card\r\n                        elevation={3}\r\n                        sx={{\r\n                            flexGrow: 1,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            mt: 1,\r\n                            p: 2\r\n                        }}>\r\n                        <WSEditorCommandArgumentsContent commandUrl={commandUrl} />\r\n                    </Card>\r\n\r\n                    <Card\r\n                        elevation={3}\r\n                        sx={{\r\n                            flexGrow: 1,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            mt: 1,\r\n                            p: 2\r\n                        }}>\r\n\r\n                        <CardContent sx={{\r\n                            flex: '1 0 auto',\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'stretch',\r\n                        }}>\r\n                            <Box sx={{\r\n                                mb: 2,\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                alignItems: \"center\"\r\n                            }}>\r\n                                <CardTitleTypography sx={{ flexShrink: 0 }}>\r\n                                    [ EXAMPLE ]\r\n                                </CardTitleTypography>\r\n\r\n                            </Box>\r\n                            {examples.length > 0 && <Box>\r\n                                {examples.map(buildExampleView)}\r\n                            </Box>}\r\n                        </CardContent>\r\n\r\n                        <CardActions sx={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"row-reverse\",\r\n                        }}>\r\n                            <Button\r\n                                variant='contained' size=\"small\" color='info' disableElevation\r\n                                onClick={() => this.onExampleDialogDisplay(undefined)}\r\n                            >\r\n                                <Typography variant='body2'>\r\n                                    Add\r\n                                </Typography>\r\n                            </Button>\r\n                        </CardActions>\r\n                    </Card>\r\n\r\n                </Box>\r\n                {displayCommandDialog && <CommandDialog open={displayCommandDialog} workspaceUrl={workspaceUrl} command={command} onClose={this.handleCommandDialogClose} />}\r\n                {displayExampleDialog && <ExampleDialog open={displayExampleDialog} workspaceUrl={workspaceUrl} command={command} idx={exampleIdx} onClose={this.handleExampleDialogClose} />}\r\n\r\n                {displayCommandDeleteDialog && <CommandDeleteDialog open={displayCommandDeleteDialog} workspaceUrl={workspaceUrl} command={command} onClose={this.handleCommandDeleteDialogClose} />}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction CommandDeleteDialog(props: {\r\n    workspaceUrl: string,\r\n    open: boolean,\r\n    command: Command,\r\n    onClose: (deleted: boolean) => void\r\n}) {\r\n    const [updating, setUpdating] = React.useState<boolean>(false);\r\n    const [relatedCommands, setRelatedCommands] = React.useState<string[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        setRelatedCommands([]);\r\n        const urls = props.command.resources.map(resource => {\r\n            const resourceId = btoa(resource.id)\r\n            const version = btoa(resource.version)\r\n            return `${props.workspaceUrl}/Resources/${resourceId}/V/${version}`\r\n        })\r\n        const promisesAll = urls.map(url => {\r\n            return axios.get(`${url}/Commands`)\r\n        })\r\n\r\n        Promise.all(promisesAll)\r\n            .then(responses => {\r\n                const commands = new Set<string>();\r\n                responses.forEach(response => {\r\n                    const responseCommands: ResponseCommand[] = response.data\r\n                    responseCommands\r\n                        .map(responseCommand => DecodeResponseCommand(responseCommand))\r\n                        .map(cmd => { commands.add(cmd.names.join(\" \")) });\r\n                });\r\n\r\n                const cmdNames: string[] = [];\r\n                commands.forEach(cmdName => cmdNames.push(cmdName));\r\n                cmdNames.sort((a, b) => a.localeCompare(b));\r\n                setRelatedCommands(cmdNames);\r\n            })\r\n            .catch(err => {\r\n                console.error(err.response)\r\n            })\r\n\r\n    }, [props.command]);\r\n\r\n    const handleClose = () => {\r\n        props.onClose(false);\r\n    }\r\n    const handleDelete = () => {\r\n        setUpdating(true);\r\n        const urls = props.command.resources.map(resource => {\r\n            const resourceId = btoa(resource.id)\r\n            const version = btoa(resource.version)\r\n            return `${props.workspaceUrl}/Resources/${resourceId}/V/${version}`\r\n        })\r\n        const promisesAll = urls.map(url => {\r\n            return axios.delete(url)\r\n        })\r\n\r\n        Promise.all(promisesAll)\r\n            .then(res => {\r\n                setUpdating(false);\r\n                props.onClose(true);\r\n            })\r\n            .catch(err => {\r\n                setUpdating(false);\r\n                console.error(err.response)\r\n            })\r\n    }\r\n    return (\r\n        <Dialog\r\n            disableEscapeKeyDown\r\n            open={props.open}\r\n        >\r\n            <DialogTitle>Delete Commands</DialogTitle>\r\n            <DialogContent dividers={true}>\r\n                {relatedCommands.map((command, idx) => (\r\n                    <Typography key={`command-${idx}`} variant=\"body2\">{`${commandPrefix}${command}`}</Typography>\r\n                ))}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                {updating &&\r\n                    <Box sx={{ width: '100%' }}>\r\n                        <LinearProgress color='info' />\r\n                    </Box>\r\n                }\r\n                {!updating && <React.Fragment>\r\n                    <Button onClick={handleClose}>Cancel</Button>\r\n                    <Button onClick={handleDelete}>Delete</Button>\r\n                </React.Fragment>}\r\n            </DialogActions>\r\n\r\n        </Dialog>\r\n    )\r\n\r\n\r\n}\r\n\r\ninterface CommandDialogProps {\r\n    workspaceUrl: string,\r\n    open: boolean\r\n    command: Command\r\n    onClose: (newCommand?: Command) => void\r\n}\r\n\r\ninterface CommandDialogState {\r\n    name: string,\r\n    stage: string,\r\n    shortHelp: string,\r\n    longHelp: string,\r\n    invalidText?: string,\r\n    updating: boolean\r\n}\r\n\r\n\r\nclass CommandDialog extends React.Component<CommandDialogProps, CommandDialogState> {\r\n\r\n    constructor(props: CommandDialogProps) {\r\n        super(props);\r\n        this.state = {\r\n            name: this.props.command.names.join(' '),\r\n            shortHelp: this.props.command.help?.short ?? \"\",\r\n            longHelp: this.props.command.help?.lines?.join('\\n') ?? \"\",\r\n            stage: this.props.command.stage,\r\n            updating: false\r\n        }\r\n    }\r\n\r\n    handleModify = (event: any) => {\r\n        let { name, stage, shortHelp, longHelp } = this.state\r\n        let { workspaceUrl, command } = this.props\r\n\r\n        name = name.trim();\r\n        shortHelp = shortHelp.trim();\r\n        longHelp = longHelp.trim();\r\n\r\n        const names = name.split(' ').filter((n) => n.length > 0);\r\n\r\n        this.setState({\r\n            invalidText: undefined\r\n        })\r\n\r\n        if (names.length < 1) {\r\n            this.setState({\r\n                invalidText: `Field 'Name' is required.`\r\n            })\r\n            return\r\n        }\r\n\r\n        for (const idx in names) {\r\n            const piece = names[idx];\r\n            if (!/^[a-z0-9]+(\\-[a-z0-9]+)*$/.test(piece)) {\r\n                this.setState({\r\n                    invalidText: `Invalid Name part: '${piece}'. Supported regular expression is: [a-z0-9]+(\\-[a-z0-9]+)* `\r\n                })\r\n                return\r\n            }\r\n        }\r\n\r\n        if (shortHelp.length < 1) {\r\n            this.setState({\r\n                invalidText: `Field 'Short Summery' is required.`\r\n            })\r\n        }\r\n\r\n        let lines: string[] | null = null;\r\n        if (longHelp.length > 1) {\r\n            lines = longHelp.split('\\n').filter(l => l.length > 0);\r\n        }\r\n\r\n        this.setState({\r\n            updating: true,\r\n        })\r\n\r\n        const leafUrl = `${workspaceUrl}/CommandTree/Nodes/aaz/` + command.names.slice(0, -1).join('/') + '/Leaves/' + command.names[command.names.length - 1];\r\n\r\n        axios.patch(leafUrl, {\r\n            help: {\r\n                short: shortHelp,\r\n                lines: lines,\r\n            },\r\n            stage: stage,\r\n        }).then(res => {\r\n            const name = names.join(' ');\r\n            if (name === command.names.join(' ')) {\r\n                const cmd = DecodeResponseCommand(res.data);\r\n                this.setState({\r\n                    updating: false,\r\n                })\r\n                this.props.onClose(cmd);\r\n            } else {\r\n                // Rename command\r\n                axios.post(`${leafUrl}/Rename`, {\r\n                    name: name\r\n                }).then(res => {\r\n                    const cmd = DecodeResponseCommand(res.data);\r\n                    this.setState({\r\n                        updating: false,\r\n                    })\r\n                    this.props.onClose(cmd);\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            console.error(err.response);\r\n            if (err.resource?.message) {\r\n                this.setState({\r\n                    invalidText: `ResponseError: ${err.resource!.message!}`,\r\n                })\r\n            }\r\n            this.setState({\r\n                updating: false,\r\n            })\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            invalidText: undefined\r\n        });\r\n        this.props.onClose();\r\n    }\r\n\r\n    render() {\r\n        const { name, shortHelp, longHelp, invalidText, updating, stage } = this.state;\r\n        return (\r\n            <Dialog\r\n                disableEscapeKeyDown\r\n                open={this.props.open}\r\n                sx={{ '& .MuiDialog-paper': { width: '80%' } }}\r\n            >\r\n                <DialogTitle>Command</DialogTitle>\r\n                <DialogContent dividers={true}>\r\n                    {invalidText && <Alert variant=\"filled\" severity='error'> {invalidText} </Alert>}\r\n                    <InputLabel required shrink sx={{ font: \"inherit\" }}>Stage</InputLabel>\r\n                    <RadioGroup\r\n                        row\r\n                        value={stage}\r\n                        name=\"stage\"\r\n                        onChange={(event: any) => {\r\n                            this.setState({\r\n                                stage: event.target.value,\r\n                            })\r\n                        }}\r\n                    >\r\n                        <FormControlLabel value=\"Stable\" control={<Radio />} label=\"Stable\" sx={{ ml: 4 }} />\r\n                        <FormControlLabel value=\"Preview\" control={<Radio />} label=\"Preview\" sx={{ ml: 4 }} />\r\n                        <FormControlLabel value=\"Experimental\" control={<Radio />} label=\"Experimental\" sx={{ ml: 4 }} />\r\n                    </RadioGroup>\r\n\r\n                    <TextField\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant='standard'\r\n                        value={name}\r\n                        onChange={(event: any) => {\r\n                            this.setState({\r\n                                name: event.target.value,\r\n                            })\r\n                        }}\r\n                        margin=\"normal\"\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        id=\"shortSummery\"\r\n                        label=\"Short Summery\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant='standard'\r\n                        value={shortHelp}\r\n                        onChange={(event: any) => {\r\n                            this.setState({\r\n                                shortHelp: event.target.value,\r\n                            })\r\n                        }}\r\n                        margin=\"normal\"\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        id=\"longSummery\"\r\n                        label=\"Long Summery\"\r\n                        helperText=\"Please add long summer in lines.\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        multiline\r\n                        variant='standard'\r\n                        value={longHelp}\r\n                        onChange={(event: any) => {\r\n                            this.setState({\r\n                                longHelp: event.target.value,\r\n                            })\r\n                        }}\r\n                        margin=\"normal\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {updating &&\r\n                        <Box sx={{ width: '100%' }}>\r\n                            <LinearProgress color='info' />\r\n                        </Box>\r\n                    }\r\n                    {!updating && <React.Fragment>\r\n                        <Button onClick={this.handleClose}>Cancel</Button>\r\n                        <Button onClick={this.handleModify}>Save</Button>\r\n                    </React.Fragment>}\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\n// function CommandDeleteDialog\r\n\r\ninterface ExampleDialogProps {\r\n    workspaceUrl: string\r\n    open: boolean\r\n    command: Command\r\n    idx?: number\r\n    onClose: (newCommand?: Command) => void\r\n}\r\n\r\ninterface ExampleDialogState {\r\n    name: string\r\n    exampleCommands: string[]\r\n    isAdd: boolean\r\n    invalidText?: string\r\n    updating: boolean\r\n}\r\n\r\nconst ExampleCommandTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\r\n    color: theme.palette.primary.main,\r\n    fontFamily: \"'Roboto Condensed', sans-serif\",\r\n    fontSize: 16,\r\n    fontWeight: 400,\r\n}))\r\n\r\nclass ExampleDialog extends React.Component<ExampleDialogProps, ExampleDialogState> {\r\n\r\n    constructor(props: ExampleDialogProps) {\r\n        super(props);\r\n        const examples: Example[] = this.props.command.examples ?? [];\r\n        if (this.props.idx === undefined) {\r\n            this.state = {\r\n                name: \"\",\r\n                exampleCommands: [\"\",],\r\n                isAdd: true,\r\n                invalidText: undefined,\r\n                updating: false,\r\n            }\r\n        } else {\r\n            const example = examples[this.props.idx];\r\n            this.state = {\r\n                name: example.name,\r\n                exampleCommands: example.commands,\r\n                isAdd: false,\r\n                invalidText: undefined,\r\n                updating: false,\r\n            }\r\n        }\r\n    }\r\n\r\n    onUpdateExamples = (examples: Example[]) => {\r\n        let { workspaceUrl, command } = this.props;\r\n\r\n        const leafUrl = `${workspaceUrl}/CommandTree/Nodes/aaz/` + command.names.slice(0, -1).join('/') + '/Leaves/' + command.names[command.names.length - 1];\r\n\r\n        this.setState({\r\n            updating: true,\r\n        })\r\n        axios.patch(leafUrl, {\r\n            examples: examples\r\n        }).then(res => {\r\n            const cmd = DecodeResponseCommand(res.data);\r\n            this.setState({\r\n                updating: false,\r\n            })\r\n            this.props.onClose(cmd);\r\n        }).catch(err => {\r\n            console.error(err.response);\r\n            if (err.resource?.message) {\r\n                this.setState({\r\n                    invalidText: `ResponseError: ${err.resource!.message!}`,\r\n                })\r\n            }\r\n            this.setState({\r\n                updating: false,\r\n            })\r\n        });\r\n    }\r\n\r\n    handleDelete = () => {\r\n        let { command } = this.props;\r\n        let examples: Example[] = command.examples ?? [];\r\n        let idx = this.props.idx!;\r\n        examples = [...examples.slice(0, idx), ...examples.slice(idx + 1)];\r\n        this.onUpdateExamples(examples);\r\n    }\r\n\r\n    handleModify = () => {\r\n        let { command } = this.props;\r\n        let { name, exampleCommands } = this.state;\r\n        let examples: Example[] = command.examples ?? [];\r\n        let idx = this.props.idx!;\r\n\r\n        name = name.trim();\r\n        if (name.length < 1) {\r\n            this.setState({\r\n                invalidText: `Field 'Name' is required.`\r\n            })\r\n            return\r\n        }\r\n        exampleCommands = exampleCommands.map(cmd => {\r\n            return cmd.split('\\n')\r\n                .map(cmdLine => cmdLine.trim())\r\n                .filter(cmdLine => cmdLine.length > 0)\r\n                .join(' ')\r\n                .trim();\r\n        }).filter(cmd => cmd.length > 0);\r\n\r\n        if (exampleCommands.length < 1) {\r\n            this.setState({\r\n                invalidText: `Field 'Commands' is required.`\r\n            })\r\n            return\r\n        }\r\n\r\n        const newExample: Example = {\r\n            name: name,\r\n            commands: exampleCommands\r\n        }\r\n\r\n        examples = [...examples.slice(0, idx), newExample, ...examples.slice(idx + 1)];\r\n\r\n        this.onUpdateExamples(examples);\r\n    }\r\n\r\n    handleAdd = () => {\r\n        let { command } = this.props;\r\n        let { name, exampleCommands } = this.state;\r\n        let examples: Example[] = command.examples ?? [];\r\n\r\n        name = name.trim();\r\n        if (name.length < 1) {\r\n            this.setState({\r\n                invalidText: `Field 'Name' is required.`\r\n            })\r\n            return\r\n        }\r\n        exampleCommands = exampleCommands.map(cmd => {\r\n            return cmd.split('\\n')\r\n                .map(cmdLine => cmdLine.trim())\r\n                .filter(cmdLine => cmdLine.length > 0)\r\n                .join(' ')\r\n                .trim();\r\n        }).filter(cmd => cmd.length > 0);\r\n\r\n        if (exampleCommands.length < 1) {\r\n            this.setState({\r\n                invalidText: `Field 'Commands' is required.`\r\n            })\r\n            return\r\n        }\r\n\r\n        const newExample: Example = {\r\n            name: name,\r\n            commands: exampleCommands\r\n        }\r\n        examples.push(newExample);\r\n\r\n        this.onUpdateExamples(examples);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            invalidText: undefined\r\n        });\r\n        this.props.onClose()\r\n    }\r\n\r\n    onModifyExampleCommand = (cmd: string, idx: number) => {\r\n        this.setState(preState => {\r\n            return {\r\n                ...preState,\r\n                exampleCommands: [...preState.exampleCommands.slice(0, idx), cmd, ...preState.exampleCommands.slice(idx + 1)]\r\n            }\r\n        })\r\n    }\r\n\r\n    onRemoveExampleCommand = (idx: number) => {\r\n        this.setState(preState => {\r\n            let exampleCommands: string[] = [...preState.exampleCommands.slice(0, idx), ...preState.exampleCommands.slice(idx + 1)];\r\n            if (exampleCommands.length == 0) {\r\n                exampleCommands.push(\"\");\r\n            }\r\n            return {\r\n                ...preState,\r\n                exampleCommands: exampleCommands,\r\n            }\r\n        })\r\n    }\r\n\r\n    onAddExampleCommand = () => {\r\n        this.setState(preState => {\r\n            return {\r\n                ...preState,\r\n                exampleCommands: [...preState.exampleCommands, \"\"]\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { name, exampleCommands, isAdd, invalidText, updating } = this.state;\r\n\r\n        const buildExampleInput = (cmd: string, idx: number) => {\r\n            return (\r\n                <Box key={idx} sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'flex-start',\r\n                    ml: 1,\r\n                }}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={() => this.onRemoveExampleCommand(idx)}\r\n                        aria-label=\"remove\"\r\n                    >\r\n                        <DoDisturbOnRoundedIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                    <Input\r\n                        id={`command-${idx}`}\r\n                        multiline\r\n                        value={cmd}\r\n                        onChange={(event: any) => {\r\n                            this.onModifyExampleCommand(event.target.value, idx)\r\n                        }}\r\n                        sx={{ flexGrow: 1 }}\r\n                        placeholder=\"Input a command here.\"\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <ExampleCommandTypography>{commandPrefix}</ExampleCommandTypography>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                </Box>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                disableEscapeKeyDown\r\n                open={this.props.open}\r\n                sx={{ '& .MuiDialog-paper': { width: '80%' } }}\r\n            >\r\n                <DialogTitle>{isAdd ? \"Add Example\" : \"Modify Example\"}</DialogTitle>\r\n                <DialogContent dividers={true}>\r\n                    {invalidText && <Alert variant=\"filled\" severity='error'> {invalidText} </Alert>}\r\n                    <TextField\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant='standard'\r\n                        value={name}\r\n                        onChange={(event: any) => {\r\n                            this.setState({\r\n                                name: event.target.value,\r\n                            })\r\n                        }}\r\n                        margin=\"normal\"\r\n                        required\r\n                    />\r\n                    <InputLabel required sx={{ font: \"inherit\", mt: 1 }}>Commands</InputLabel>\r\n                    {exampleCommands.map(buildExampleInput)}\r\n                    <Box sx={{\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                        ml: 1,\r\n                    }}>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            onClick={this.onAddExampleCommand}\r\n                            aria-label=\"remove\"\r\n                        >\r\n                            <AddCircleRoundedIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                        <ExampleCommandTypography sx={{ flexShrink: 0 }}> One more command</ExampleCommandTypography>\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {updating &&\r\n                        <Box sx={{ width: '100%' }}>\r\n                            <LinearProgress color='info' />\r\n                        </Box>\r\n                    }\r\n                    {!updating && <React.Fragment>\r\n                        <Button onClick={this.handleClose}>Cancel</Button>\r\n                        {!isAdd && <React.Fragment>\r\n                            <Button onClick={this.handleDelete}>Delete</Button>\r\n                            <Button onClick={this.handleModify}>Save</Button>\r\n                        </React.Fragment>}\r\n                        {isAdd && <Button onClick={this.handleAdd}>Add</Button>}\r\n                    </React.Fragment>}\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nconst DecodeResponseCommand = (command: ResponseCommand): Command => {\r\n    return {\r\n        id: 'command:' + command.names.join('/'),\r\n        names: command.names,\r\n        help: command.help,\r\n        stage: command.stage ?? \"Stable\",\r\n        examples: command.examples,\r\n        resources: command.resources,\r\n        version: command.version,\r\n    }\r\n}\r\nexport default WSEditorCommandContent;\r\n\r\nexport { DecodeResponseCommand };\r\nexport type { Command, ResponseCommand, ResponseCommands };\r\n\r\n","import * as React from 'react';\r\nimport { Box, Dialog, Slide, Drawer, Toolbar, DialogTitle, DialogContent, DialogActions, LinearProgress, Button } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useParams } from 'react-router';\r\nimport axios from 'axios';\r\nimport { TransitionProps } from '@mui/material/transitions';\r\nimport WSEditorSwaggerPicker from './WSEditorSwaggerPicker';\r\nimport WSEditorToolBar from './WSEditorToolBar';\r\nimport WSEditorCommandTree, { CommandTreeLeaf, CommandTreeNode } from './WSEditorCommandTree';\r\nimport WSEditorCommandGroupContent, { CommandGroup, DecodeResponseCommandGroup, ResponseCommandGroup, ResponseCommandGroups } from './WSEditorCommandGroupContent';\r\nimport WSEditorCommandContent, { Command, DecodeResponseCommand, ResponseCommand } from './WSEditorCommandContent';\r\nimport { Alert } from 'reactstrap';\r\n\r\n\r\nconst TopPadding = styled(Box)(({ theme }) => ({\r\n    [theme.breakpoints.up('sm')]: {\r\n        height: '12vh',\r\n    },\r\n}));\r\n\r\nconst MiddlePadding = styled(Box)(({ theme }) => ({\r\n    height: '6vh'\r\n}));\r\n\r\n\r\ninterface CommandGroupMap {\r\n    [id: string]: CommandGroup\r\n}\r\n\r\ninterface CommandMap {\r\n    [id: string]: Command\r\n}\r\n\r\n\r\ninterface WSEditorProps {\r\n    params: {\r\n        workspaceName: string\r\n    }\r\n}\r\n\r\ninterface WSEditorState {\r\n    name: string\r\n    workspaceUrl: string,\r\n    plane: string,\r\n\r\n    selected: Command | CommandGroup | null,\r\n    expanded: Set<string>,\r\n\r\n    commandMap: CommandMap,\r\n    commandGroupMap: CommandGroupMap,\r\n    commandTree: CommandTreeNode[],\r\n\r\n    showSwaggerResourcePicker: boolean\r\n    showExportDialog: boolean\r\n}\r\n\r\nconst swaggerResourcePickerTransition = React.forwardRef(function swaggerResourcePickerTransition(\r\n    props: TransitionProps & { children: React.ReactElement },\r\n    ref: React.Ref<unknown>\r\n) {\r\n    return <Slide direction='up' ref={ref} {...props} />\r\n\r\n});\r\n\r\nconst drawerWidth = 300;\r\n\r\n\r\nclass WSEditor extends React.Component<WSEditorProps, WSEditorState> {\r\n\r\n    constructor(props: WSEditorProps) {\r\n        super(props);\r\n        this.state = {\r\n            name: this.props.params.workspaceName,\r\n            workspaceUrl: `/AAZ/Editor/Workspaces/${this.props.params.workspaceName}`,\r\n            plane: \"\",\r\n            selected: null,\r\n            expanded: new Set<string>(),\r\n            commandMap: {},\r\n            commandGroupMap: {},\r\n            commandTree: [],\r\n            showSwaggerResourcePicker: false,\r\n            showExportDialog: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadWorkspace();\r\n    }\r\n\r\n    loadWorkspace = async (preSelected?: CommandGroup | Command | null) => {\r\n        const { workspaceUrl } = this.state\r\n        if (preSelected === undefined) {\r\n            preSelected = this.state.selected;\r\n        }\r\n\r\n        try {\r\n            const res = await axios.get(workspaceUrl);\r\n            const commandMap: CommandMap = {};\r\n            const commandGroupMap: CommandGroupMap = {};\r\n\r\n            const buildCommand = (command_1: ResponseCommand): CommandTreeLeaf => {\r\n                const cmd: Command = DecodeResponseCommand(command_1);\r\n                commandMap[cmd.id] = cmd;\r\n                return {\r\n                    id: cmd.id,\r\n                    names: [...cmd.names],\r\n                };\r\n            };\r\n\r\n            const buildCommandGroup = (commandGroup_1: ResponseCommandGroup): CommandTreeNode => {\r\n                const group: CommandGroup = DecodeResponseCommandGroup(commandGroup_1);\r\n\r\n                commandGroupMap[group.id] = group;\r\n\r\n                const node: CommandTreeNode = {\r\n                    id: group.id,\r\n                    names: [...group.names],\r\n                    canDelete: group.canDelete,\r\n                };\r\n\r\n                if (typeof commandGroup_1.commands === 'object' && commandGroup_1.commands !== null) {\r\n                    node['leaves'] = [];\r\n\r\n                    for (const name in commandGroup_1.commands) {\r\n                        const subLeave = buildCommand(commandGroup_1.commands[name]);\r\n                        node['leaves'].push(subLeave);\r\n                    }\r\n                    node['leaves'].sort((a, b) => a.id.localeCompare(b.id));\r\n                    if (node['leaves'].length > 0) {\r\n                        node.canDelete = false;\r\n                    }\r\n                }\r\n\r\n                if (typeof commandGroup_1.commandGroups === 'object' && commandGroup_1.commandGroups !== null) {\r\n                    node['nodes'] = [];\r\n                    for (const name_1 in commandGroup_1.commandGroups) {\r\n                        const subNode = buildCommandGroup(commandGroup_1.commandGroups[name_1]);\r\n                        node['nodes'].push(subNode);\r\n                        if (!subNode.canDelete) {\r\n                            node.canDelete = false;\r\n                        }\r\n                    }\r\n                    node['nodes'].sort((a_1, b_1) => a_1.id.localeCompare(b_1.id));\r\n                }\r\n\r\n                if ((node['leaves']?.length ?? 0) > 1) {\r\n                    node.canDelete = false\r\n                }\r\n                group.canDelete = node.canDelete;\r\n                return node;\r\n            };\r\n\r\n            let commandTree: CommandTreeNode[] = [];\r\n\r\n            if (res.data.commandTree.commandGroups) {\r\n                const cmdGroups: ResponseCommandGroups = res.data.commandTree.commandGroups;\r\n                for (const key in cmdGroups) {\r\n                    commandTree.push(buildCommandGroup(cmdGroups[key]));\r\n                }\r\n                commandTree.sort((a_2, b_2) => a_2.id.localeCompare(b_2.id));\r\n            }\r\n\r\n            let selected: Command | CommandGroup | null = null;\r\n\r\n            if (preSelected != null) {\r\n                if (preSelected.id.startsWith('command:')) {\r\n                    let id: string = preSelected.id;\r\n                    if (id in commandMap) {\r\n                        selected = commandMap[id];\r\n                    } else {\r\n                        id = 'group:' + id.slice(8);\r\n                        let parts = id.split('/');\r\n                        while (parts.length > 1 && !(id in commandGroupMap)) {\r\n                            parts = parts.slice(0, -1);\r\n                            id = parts.join('/');\r\n                        }\r\n                        if (id in commandGroupMap) {\r\n                            selected = commandGroupMap[id];\r\n                        }\r\n                    }\r\n                } else if (preSelected.id.startsWith('group:')) {\r\n                    let id_1: string = preSelected.id;\r\n                    let parts_1 = id_1.split('/');\r\n                    while (parts_1.length > 1 && !(id_1 in commandGroupMap)) {\r\n                        parts_1 = parts_1.slice(0, -1);\r\n                        id_1 = parts_1.join('/');\r\n                    }\r\n                    if (id_1 in commandGroupMap) {\r\n                        selected = commandGroupMap[id_1];\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (selected === null && commandTree.length > 0) {\r\n                selected = commandGroupMap[commandTree[0].id];\r\n            }\r\n\r\n            this.setState(preState => {\r\n                const newExpanded = new Set<string>();\r\n\r\n                // clean up removed group Id\r\n                preState.expanded.forEach((value) => {\r\n                    if (value in commandGroupMap) {\r\n                        newExpanded.add(value);\r\n                    }\r\n                })\r\n\r\n                // expand new groupId by default\r\n                for (const groupId in commandGroupMap) {\r\n                    if (!(groupId in preState.commandGroupMap)) {\r\n                        newExpanded.add(groupId);\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    ...preState,\r\n                    plane: res.data.plane,\r\n                    commandTree: commandTree,\r\n                    selected: selected,\r\n                    commandMap: commandMap,\r\n                    commandGroupMap: commandGroupMap,\r\n                    expanded: newExpanded,\r\n                }\r\n            });\r\n\r\n            if (selected) {\r\n                let expandedId = selected.id;\r\n                if (expandedId.startsWith('command:')) {\r\n                    expandedId = expandedId.replace('command:', 'group:').split('/').slice(0, -1).join('/')\r\n                }\r\n                let expandedIdParts = expandedId.split('/');\r\n                this.setState(preState => {\r\n                    const newExpanded = new Set(preState.expanded);\r\n                    expandedIdParts.forEach((value, idx) => {\r\n                        newExpanded.add(expandedIdParts.slice(0, idx+1).join('/'));\r\n                    })\r\n                    return {\r\n                        ...preState,\r\n                        expanded: newExpanded,\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (commandTree.length === 0) {\r\n                this.showSwaggerResourcePicker();\r\n            }\r\n        } catch (err) {\r\n            return console.error(err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    showSwaggerResourcePicker = () => {\r\n        this.setState({ showSwaggerResourcePicker: true })\r\n    }\r\n\r\n    handleSwaggerResourcePickerClose = (updated: boolean) => {\r\n        if (updated) {\r\n            this.loadWorkspace();\r\n        }\r\n        this.setState({\r\n            showSwaggerResourcePicker: false\r\n        })\r\n    }\r\n\r\n    handleBackToHomepage = () => {\r\n        window.location.href = `/?#/workspace`\r\n    }\r\n\r\n    handleGenerate = () => {\r\n        this.setState({\r\n            showExportDialog: true\r\n        })\r\n    }\r\n\r\n    handleGenerationClose = (exported: boolean) => {\r\n        this.setState({\r\n            showExportDialog: false\r\n        })\r\n    }\r\n\r\n    handleCommandTreeSelect = (nodeId: string) => {\r\n        if (nodeId.startsWith('command:')) {\r\n            this.setState(preState => {\r\n                const selected = preState.commandMap[nodeId];\r\n                return {\r\n                    ...preState,\r\n                    selected: selected,\r\n                }\r\n            })\r\n        } else if (nodeId.startsWith('group:')) {\r\n            this.setState(preState => {\r\n                const selected = preState.commandGroupMap[nodeId];\r\n                return {\r\n                    ...preState,\r\n                    selected: selected,\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleCommandGroupUpdate = (commandGroup: CommandGroup | null) => {\r\n        this.loadWorkspace(commandGroup);\r\n    }\r\n\r\n    handleCommandUpdate = (command: Command | null) => {\r\n        this.loadWorkspace(command);\r\n    }\r\n\r\n    handleCommandTreeToggle = (nodeIds: string[]) => {\r\n        const newExpanded = new Set(nodeIds);\r\n        this.setState({\r\n            expanded: newExpanded,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { showSwaggerResourcePicker, showExportDialog, plane, name, commandTree, selected, workspaceUrl, expanded } = this.state;\r\n        const expandedIds: string[] = []\r\n        expanded.forEach((expandId) => {\r\n            expandedIds.push(expandId);\r\n        })\r\n        return (\r\n            <React.Fragment>\r\n                <WSEditorToolBar workspaceName={name} onHomePage={this.handleBackToHomepage} onGenerate={this.handleGenerate}>\r\n                </WSEditorToolBar>\r\n\r\n                <Box sx={{ display: 'flex' }}>\r\n                    <Drawer\r\n                        variant=\"permanent\"\r\n                        sx={{\r\n                            width: drawerWidth,\r\n                            flexShrink: 0,\r\n                            [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\r\n                        }}\r\n                    >\r\n                        <Toolbar />\r\n                        {selected != null &&\r\n                            <WSEditorCommandTree\r\n                                commandTreeNodes={commandTree}\r\n                                onSelected={this.handleCommandTreeSelect}\r\n                                onToggle={this.handleCommandTreeToggle}\r\n                                onAdd={this.showSwaggerResourcePicker}\r\n                                selected={selected!.id}\r\n                                expanded={expandedIds}\r\n                            />\r\n                        }\r\n                    </Drawer>\r\n\r\n                    <Box component='main' sx={{\r\n                        flexGrow: 1,\r\n                        p: 1,\r\n                    }}>\r\n                        <Toolbar sx={{ flexShrink: 0 }} />\r\n                        {selected != null && selected.id.startsWith('group:') &&\r\n                            <WSEditorCommandGroupContent\r\n                                workspaceUrl={workspaceUrl} commandGroup={(selected as CommandGroup)}\r\n                                onUpdateCommandGroup={this.handleCommandGroupUpdate}\r\n                            />\r\n                        }\r\n                        {selected != null && selected.id.startsWith('command:') &&\r\n                            <WSEditorCommandContent\r\n                                workspaceUrl={workspaceUrl} command={(selected as Command)}\r\n                                onUpdateCommand={this.handleCommandUpdate}\r\n                            />\r\n                        }\r\n                    </Box>\r\n                </Box>\r\n\r\n                <Dialog\r\n                    fullScreen\r\n                    open={showSwaggerResourcePicker}\r\n                    onClose={this.handleSwaggerResourcePickerClose}\r\n                    TransitionComponent={swaggerResourcePickerTransition}\r\n                >\r\n                    <WSEditorSwaggerPicker plane={plane} workspaceName={name} onClose={this.handleSwaggerResourcePickerClose} />\r\n                </Dialog>\r\n                {showExportDialog && <WSEditorExportDialog workspaceUrl={workspaceUrl} open={showExportDialog} onClose={this.handleGenerationClose} />}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction WSEditorExportDialog(props: {\r\n    workspaceUrl: string,\r\n    open: boolean,\r\n    onClose: (exported: boolean) => void,\r\n}) {\r\n    const [updating, setUpdating] = React.useState<boolean>(false);\r\n    const [invalidText, setInvalidText] = React.useState<string | undefined>(undefined);\r\n\r\n    const handleClose = () => {\r\n        props.onClose(false);\r\n    }\r\n\r\n    const handleExport = () => {\r\n        const url = `${props.workspaceUrl}/Generate`;\r\n        setUpdating(true);\r\n\r\n        axios.post(url)\r\n            .then(res => {\r\n                setUpdating(false);\r\n                props.onClose(true);\r\n            }).catch(err => {\r\n                console.error(err.response)\r\n                if (err.resource?.message) {\r\n                    setInvalidText(`ResponseError: ${err.resource!.message!}`);\r\n                }\r\n                setUpdating(false);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            disableEscapeKeyDown\r\n            open={props.open}\r\n        >\r\n            <DialogTitle>Export workspace command models to AAZ Repo</DialogTitle>\r\n            <DialogContent>\r\n                {invalidText && <Alert variant=\"filled\" severity='error'> {invalidText} </Alert>}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                {updating &&\r\n                    <Box sx={{ width: '100%' }}>\r\n                        <LinearProgress color='info' />\r\n                    </Box>\r\n                }\r\n                {!updating && <React.Fragment>\r\n                    <Button onClick={handleClose}>Cancel</Button>\r\n                    <Button onClick={handleExport}>Confirm</Button>\r\n                </React.Fragment>}\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nconst WSEditorWrapper = (props: any) => {\r\n    const params = useParams()\r\n\r\n    return <WSEditor params={params} {...props} />\r\n}\r\n\r\nexport { WSEditorWrapper as WSEditor };\r\n","import * as React from 'react';\r\nimport withRoot from '../../withRoot';\r\nimport { AppAppBar } from '../../components/AppAppBar';\r\n\r\nclass CommandsPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <AppAppBar pageName={'Commands'} />\r\n                {/* <Typography variant='h1' gutterBottom>\r\n                    Commands Page\r\n                </Typography> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRoot(CommandsPage);\r\n","import * as React from 'react';\r\nimport withRoot from '../../withRoot';\r\nimport { Outlet } from 'react-router';\r\n\r\nclass GenerationPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Outlet />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRoot(GenerationPage);\r\n","import { Autocomplete, createFilterOptions, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport axios from 'axios';\r\nimport * as React from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\n\r\ninterface CLIModule {\r\n    name: string\r\n    folder: string | null\r\n    url: string | null\r\n}\r\n\r\ninterface CLIModuleSelectorProps {\r\n    repo: string\r\n    name: string\r\n}\r\n\r\ninterface CLIModuleSelectorState {\r\n    options: any[],\r\n    value: CLIModule | null,\r\n    openDialog: boolean,\r\n    createDialogValue: CLIModule\r\n}\r\n\r\ninterface InputType {\r\n    inputValue: string,\r\n    title: string,\r\n}\r\n\r\nconst filter = createFilterOptions<CLIModule | InputType>();\r\n\r\n\r\nclass CLIModuleSelector extends React.Component<CLIModuleSelectorProps, CLIModuleSelectorState> {\r\n\r\n    constructor(props: CLIModuleSelectorProps) {\r\n        super(props);\r\n        this.state = {\r\n            options: [],\r\n            value: null,\r\n            openDialog: false,\r\n            createDialogValue: {\r\n                name: \"\",\r\n                folder: null,\r\n                url: null\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadModules();\r\n    }\r\n\r\n    loadModules = () => {\r\n        axios.get(\"/CLI/Az/\" + this.props.repo + \"/Modules\")\r\n            .then((res) => {\r\n                let options = res.data.map((option: any) => {\r\n                    return {\r\n                        name: option.name,\r\n                        folder: option.folder,\r\n                        url: option.url,\r\n                    }\r\n                })\r\n                this.setState({\r\n                    options: options\r\n                })\r\n            })\r\n            .catch((err) => console.error(err.response));\r\n    }\r\n\r\n    handleDialogSubmit = (event: any) => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === true) {\r\n            const moduleName = this.state.createDialogValue.name;\r\n\r\n            axios.post(\"/CLI/Az/\" + this.props.repo + \"/Modules\", {\r\n                name: moduleName,\r\n            })\r\n                .then((res) => {\r\n                    let module = res.data;\r\n                    let value = {\r\n                        name: module.name,\r\n                        folder: module.folder,\r\n                        url: module.url,\r\n                    }\r\n                    setTimeout(() => {\r\n                        this.onValueUpdated(value);\r\n                    })\r\n                    this.handleDialogClose();\r\n                })\r\n                .catch(error => {\r\n                    console.error(error.response);\r\n                })\r\n        }\r\n    }\r\n\r\n    handleDialogClose = () => {\r\n        this.setState({\r\n            createDialogValue: {\r\n                name: \"\",\r\n                folder: null,\r\n                url: null,\r\n            },\r\n            openDialog: false,\r\n        })\r\n    }\r\n\r\n    onValueUpdated = (value: any) => {\r\n        this.setState({\r\n            value: value\r\n        });\r\n        if (value.url) {\r\n            window.location.href = `/?#/Generation/${this.props.repo}/${value.name}`\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { options, value, openDialog, createDialogValue } = this.state\r\n\r\n        const { repo, name } = this.props\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Autocomplete\r\n                    id={repo + \"-module-select\"}\r\n                    value={value}\r\n                    sx={{ width: 280 }}\r\n                    options={options}\r\n                    autoHighlight\r\n                    onChange={(event, newValue: any) => {\r\n                        if (typeof newValue === 'string') {\r\n                            setTimeout(() => {\r\n                                this.setState({\r\n                                    openDialog: true,\r\n                                    createDialogValue: {\r\n                                        name: newValue,\r\n                                        url: null,\r\n                                        folder: null,\r\n                                    }\r\n                                })\r\n                            });\r\n                        } else if (newValue && newValue.inputValue) {\r\n                            this.setState({\r\n                                openDialog: true,\r\n                                createDialogValue: {\r\n                                    name: newValue.inputValue,\r\n                                    url: null,\r\n                                    folder: null,\r\n                                }\r\n                            })\r\n                        } else {\r\n                            this.onValueUpdated(newValue);\r\n                        }\r\n                    }}\r\n                    filterOptions={(options, params: any) => {\r\n                        const filtered = filter(options, params);\r\n                        if (params.inputValue !== '' && -1 === options.findIndex((e) => e.name === params.inputValue)) {\r\n                            filtered.push({\r\n                                inputValue: params.inputValue,\r\n                                title: `Create \"${params.inputValue}\"`,\r\n                            });\r\n                        }\r\n                        return filtered;\r\n                    }}\r\n                    getOptionLabel={(option) => {\r\n                        if (typeof option === \"string\") {\r\n                            return option;\r\n                        }\r\n                        if (option.title) {\r\n                            return option.title;\r\n                        }\r\n                        return option.name;\r\n                    }}\r\n                    renderOption={(props, option) => {\r\n                        let labelName = (option && option.title) ? option.title : option.name;\r\n                        return (\r\n                            <Box component='li'\r\n                                {...props}\r\n                            >\r\n                                {labelName}\r\n                            </Box>\r\n                        )\r\n                    }}\r\n                    selectOnFocus\r\n                    clearOnBlur\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            label={name}\r\n                            inputProps={{\r\n                                ...params.inputProps,\r\n                                autoComplete: 'new-password', // disable autocomplete and autofill\r\n                            }}\r\n                        />\r\n                    )}\r\n                />\r\n                <Dialog open={openDialog} onClose={this.handleDialogClose}>\r\n                    <Box component='form' onSubmit={this.handleDialogSubmit}>\r\n                        <DialogTitle>\r\n                            {'Create module in Azure CLI' + repo === 'Extension' ? ' Extension' : ''}\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"normal\"\r\n                                id=\"name\"\r\n                                required\r\n                                value={createDialogValue.name}\r\n                                onChange={(event: any) => {\r\n                                    this.setState({\r\n                                        createDialogValue: {\r\n                                            ...createDialogValue,\r\n                                            name: event.target.value,\r\n                                        }\r\n                                    })\r\n                                }}\r\n                                label=\"Module Name\"\r\n                                type=\"text\"\r\n                                variant='standard'\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleDialogClose}>Cancel</Button>\r\n                            <Button type=\"submit\" color=\"success\">Create</Button>\r\n                        </DialogActions>\r\n                    </Box>\r\n                </Dialog>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CLIModuleSelector\r\n","import * as React from 'react';\r\nimport { Typography, Box, Link } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport CLIModuleSelector from './CLIModuleSelector';\r\nimport { AppAppBar } from '../../components/AppAppBar';\r\nimport PageLayout from '../../components/PageLayout';\r\n\r\n\r\nconst MiddlePadding = styled(Box)(({ theme }) => ({\r\n    height: '6vh'\r\n}));\r\n\r\nconst SpacePadding = styled(Box)(({ theme }) => ({\r\n    width: '3vh'\r\n}));\r\n\r\nclass GenerationInstruction extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <AppAppBar pageName={'Generation'} />\r\n                <PageLayout>\r\n                    <Box sx={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        flexDirection: 'column',\r\n                        justifyContent: 'center',\r\n                    }}>\r\n                        <Box sx={{ flexGrow: 3 }} />\r\n                        <Box sx={{\r\n                            flexGrow: 3,\r\n                            flexShrink: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            flexDirection: 'column'\r\n                        }}>\r\n                            <Typography variant='h3' gutterBottom>\r\n                                Please select a CLI Module\r\n                            </Typography>\r\n                            <MiddlePadding />\r\n                            <Box sx={{\r\n                                display: \"flex\",\r\n                                flexDirection: 'row',\r\n                                alignItems: \"center\"\r\n                            }}>\r\n                                <CLIModuleSelector repo='Main' name='Azure CLI Module' />\r\n                                <SpacePadding />\r\n                                <Typography variant='h6' gutterBottom>\r\n                                    Or\r\n                                </Typography>\r\n                                <SpacePadding />\r\n                                <CLIModuleSelector repo='Extension' name='Azure CLI Extension Module' />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box sx={{ flexGrow: 5 }} />\r\n                    </Box>\r\n                </PageLayout>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GenerationInstruction;\r\n","import * as React from \"react\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\n\r\ninterface GenerationProfileTabProps {\r\n  value: number;\r\n  profiles: string[];\r\n  onChange: (event: React.SyntheticEvent, newValue: number) => void;\r\n}\r\n\r\nfunction a11yProps(index: number) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nclass GenerationProfileTab extends React.Component<GenerationProfileTabProps> {\r\n  render() {\r\n    const { value, profiles, onChange } = this.props;\r\n    return (\r\n      <Tabs\r\n        orientation=\"vertical\"\r\n        variant=\"scrollable\"\r\n        value={value}\r\n        onChange={onChange}\r\n        aria-label=\"Vertical tabs example\"\r\n        sx={{ borderRight: 1, borderColor: \"divider\" }}\r\n      >\r\n        {profiles.map((profile, idx) => {\r\n          return <Tab key={idx} label={profile} {...a11yProps(idx)} />;\r\n        })}\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenerationProfileTab;\r\n","import React from \"react\";\r\nimport FolderIcon from \"@mui/icons-material/Folder\";\r\nimport DescriptionIcon from \"@mui/icons-material/Description\";\r\n\r\ntype Props = {\r\n  type?: string;\r\n};\r\n\r\nexport const TypeIcon: React.FC<Props> = (props) => {\r\n\r\n  \r\n  if (props.type===\"CommandGroup\") {\r\n    return <FolderIcon />;\r\n  } else {\r\n    return <DescriptionIcon/>\r\n  }\r\n};","import React from \"react\";\r\nimport { NativeSelect, Typography } from \"@mui/material\";\r\nimport { Checkbox } from \"@mui/material\";\r\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\r\nimport { NodeModel } from \"@minoru/react-dnd-treeview\";\r\nimport { CheckData } from \"./types\";\r\nimport { TypeIcon } from \"./TypeIcon\";\r\nimport styles from \"./CheckNode.module.css\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\n\r\ntype Props = {\r\n  node: NodeModel<CheckData>;\r\n  depth: number;\r\n  isOpen: boolean;\r\n  isSelected: boolean;\r\n  onToggle: (id: NodeModel[\"id\"]) => void;\r\n  onSelect: (node: NodeModel<CheckData>) => void;\r\n  onChange: (node: NodeModel<CheckData>, version: string) => void;\r\n};\r\n\r\nexport const CheckNode: React.FC<Props> = (props) => {\r\n  const { data } = props.node;\r\n  const versions = data!.versions;\r\n  const indent = props.depth * 24;\r\n\r\n  const handleToggle = (e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    props.onToggle(props.node.id);\r\n  };\r\n\r\n  const handleSelect = () => props.onSelect(props.node);\r\n  const handleChange = (event: any) => {\r\n    if (versions) {\r\n      const currVersion = versions[event.target.value];\r\n      props.onChange(props.node, currVersion);\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className={`tree-node ${styles.root} ${\r\n        props.isSelected ? styles.isSelected : \"\"\r\n      }`}\r\n      style={{ paddingInlineStart: indent }}\r\n    >\r\n      <div\r\n        className={`${styles.expandIconWrapper} ${\r\n          props.isOpen ? styles.isOpen : \"\"\r\n        }`}\r\n      >\r\n        {props.node.droppable && (\r\n          <div onClick={handleToggle}>\r\n            <ArrowRightIcon />\r\n          </div>\r\n        )}\r\n      </div>\r\n      {data!.type === \"Command\" && (\r\n        <div>\r\n          <Checkbox\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            checked={props.isSelected}\r\n            onClick={handleSelect}\r\n          />\r\n        </div>\r\n      )}\r\n      <div>\r\n        <TypeIcon type={data!.type} />\r\n      </div>\r\n      <div className={styles.labelGridItem}>\r\n        <Typography variant=\"inherit\">{props.node.text}</Typography>\r\n      </div>\r\n      <div>\r\n        {props.isSelected && (\r\n          <FormControl sx={{ m: 1, minWidth: 80 }}>\r\n            <NativeSelect\r\n              key={data!.versionIndex}\r\n              defaultValue={data!.versionIndex}\r\n              inputProps={{\r\n                name: \"version\",\r\n                id: \"uncontrolled-native\",\r\n              }}\r\n              onChange={handleChange}\r\n            >\r\n              {versions?.map((version, idx) => (\r\n                <option key={idx} value={idx}>\r\n                  {version}\r\n                </option>\r\n              ))}\r\n            </NativeSelect>\r\n          </FormControl>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { NodeModel, Tree } from \"@minoru/react-dnd-treeview\";\r\nimport { CheckData } from \"../../components/TreeView/types\";\r\nimport { CheckNode } from \"../../components/TreeView/CheckNode\";\r\nimport styles from \"../../components/TreeView/App.module.css\";\r\n\r\ninterface GenerationCommandTreeProps {\r\n  treeData: NodeModel<CheckData>[];\r\n  selectedNodes: NodeModel<CheckData>[];\r\n  onSelect: (node: NodeModel<CheckData>) => void;\r\n  onChange: (node: NodeModel<CheckData>, version: string) => void;\r\n}\r\n\r\nclass GenerationCommandTree extends React.Component<GenerationCommandTreeProps> {\r\n  render() {\r\n    const { treeData, selectedNodes, onSelect, onChange } = this.props;\r\n    return (\r\n      <Tree\r\n        tree={treeData}\r\n        rootId={0}\r\n        render={(node: NodeModel<CheckData>, { depth, isOpen, onToggle }) => (\r\n          <CheckNode\r\n            node={node}\r\n            depth={depth}\r\n            isOpen={isOpen}\r\n            isSelected={!!selectedNodes.find((n) => n.id === node.id)}\r\n            onToggle={onToggle}\r\n            onSelect={onSelect}\r\n            onChange={onChange}\r\n          />\r\n        )}\r\n        onDrop={() => {}}\r\n        classes={{\r\n          root: styles.treeRoot,\r\n          dropTarget: styles.dropTarget,\r\n        }}\r\n        initialOpen={true}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenerationCommandTree;\r\n","import * as React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Button,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\n\r\ninterface GenerationModuleEditorToolBarProps {\r\n  moduleName: string;\r\n  onHomePage: () => void;\r\n  onGenerate: () => void;\r\n}\r\n\r\nclass GenerationModuleEditorToolBar extends React.Component<GenerationModuleEditorToolBarProps> {\r\n  render() {\r\n    const { moduleName, onHomePage, onGenerate } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar\r\n          sx={{ position: \"fixed\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        >\r\n          <Toolbar\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              height: 64,\r\n            }}\r\n          >\r\n            <IconButton\r\n              color=\"inherit\"\r\n              onClick={onHomePage}\r\n              aria-label=\"home\"\r\n              sx={{ mr: 2, flexShrink: 0 }}\r\n            >\r\n              <HomeIcon sx={{ mr: 2 }} />\r\n              <Typography\r\n                variant=\"h6\"\r\n                component=\"div\"\r\n                color=\"inherit\"\r\n                sx={{ mr: 2 }}\r\n              >\r\n                GENERATION\r\n              </Typography>\r\n            </IconButton>\r\n\r\n            <Typography variant=\"h5\" component=\"div\" color=\"inherit\">\r\n              {moduleName}\r\n            </Typography>\r\n\r\n            <Box sx={{ flexGrow: 1 }} />\r\n            <Box sx={{ flexShrink: 0 }}>\r\n              <Tooltip title=\"Generate CLI Commands\">\r\n                <Button variant=\"outlined\" color=\"inherit\" onClick={onGenerate}>\r\n                  Generate\r\n                </Button>\r\n              </Tooltip>\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenerationModuleEditorToolBar;\r\n","import * as React from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Drawer,\r\n  LinearProgress,\r\n  Toolbar,\r\n} from \"@mui/material\";\r\nimport { useParams } from \"react-router\";\r\nimport GenerationProfileTab from \"./GenerationProfileTab\";\r\nimport GenerationCommandTree from \"./GenerationCommandTree\";\r\nimport axios from \"axios\";\r\nimport { NodeModel } from \"@minoru/react-dnd-treeview\";\r\nimport { CheckData } from \"../../components/TreeView/types\";\r\nimport GenerationModuleEditorToolBar from \"./GenerationModuleEditorToolBar\";\r\nimport { Alert } from \"reactstrap\";\r\n\r\ntype Version = {\r\n  examples: ExampleType;\r\n  name: string;\r\n  resources: ResourceType[];\r\n  stage: string;\r\n};\r\n\r\ntype Command = {\r\n  help: { short: string };\r\n  names: string[];\r\n  versions: Version[];\r\n};\r\n\r\ntype Commands = {\r\n  [name: string]: Command;\r\n};\r\n\r\ntype CommandGroup = {\r\n  commandGroups?: CommandGroups;\r\n  commands?: Commands;\r\n  help: HelpType;\r\n  names: string[];\r\n};\r\n\r\ntype CommandGroups = {\r\n  [name: string]: CommandGroup;\r\n};\r\n\r\ntype RegisterType = {\r\n  stage: string;\r\n};\r\n\r\ntype ResourceType = {\r\n  id: string;\r\n  plane: string;\r\n  version: string;\r\n};\r\n\r\ntype ExampleType = {\r\n  commands: string[];\r\n  name: string;\r\n};\r\n\r\ntype HelpType = {\r\n  short: string;\r\n  examples?: ExampleType[];\r\n};\r\n\r\ntype LeafType = {\r\n  help: HelpType;\r\n  names: string[];\r\n  registerInfo: RegisterType;\r\n  resources: ResourceType[];\r\n  stage: string;\r\n  version: string;\r\n};\r\n\r\ntype Leaves = {\r\n  [name: string]: LeafType;\r\n};\r\n\r\ntype NodeType = {\r\n  help: HelpType;\r\n  names: string[];\r\n  registerInfo: RegisterType;\r\n  commandGroups?: Nodes;\r\n  commands?: Leaves;\r\n};\r\n\r\ntype Nodes = {\r\n  [name: string]: NodeType;\r\n};\r\n\r\ninterface GenerationModuleEditorProps {\r\n  params: {\r\n    repoName: string;\r\n    moduleName: string;\r\n  };\r\n}\r\n\r\ninterface GenerationModuleEditorState {\r\n  repoName: string;\r\n  moduleName: string;\r\n  profiles: string[];\r\n  profileIndex: number;\r\n  currentIndex: number;\r\n  initialTreeData: NodeModel<CheckData>[];\r\n  treeData: NodeModel<CheckData>[];\r\n  toBeGenerated: Nodes;\r\n  selectedNodes: NodeModel<CheckData>[];\r\n  showGenerateDialog: boolean;\r\n}\r\n\r\nclass GenerationModuleEditor extends React.Component<\r\n  GenerationModuleEditorProps,\r\n  GenerationModuleEditorState\r\n> {\r\n  constructor(props: GenerationModuleEditorProps) {\r\n    super(props);\r\n    this.state = {\r\n      repoName: this.props.params.repoName,\r\n      moduleName: this.props.params.moduleName,\r\n      profiles: [],\r\n      profileIndex: 0,\r\n      currentIndex: 0,\r\n      initialTreeData: [],\r\n      treeData: [],\r\n      toBeGenerated: {},\r\n      selectedNodes: [],\r\n      showGenerateDialog: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initialModuleEditor();\r\n  }\r\n\r\n  initialModuleEditor = () => {\r\n    axios\r\n      .get(\"/CLI/Az/Profiles\")\r\n      .then((res) => {\r\n        this.setState({ profiles: res.data }, () => {\r\n          this.loadCommandTree();\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err.response);\r\n      });\r\n  };\r\n\r\n  loadCommandTree = () => {\r\n    axios\r\n      .get(`/AAZ/Specs/CommandTree/Nodes/aaz`)\r\n      .then((res) => {\r\n        if (!res.data) {\r\n          return;\r\n        }\r\n        let combinedData: CommandGroups = {};\r\n        const moduleName = \"az\";\r\n        combinedData[moduleName] = res.data;\r\n        combinedData[moduleName][\"names\"] = [\"az\"];\r\n\r\n        let depth = 0;\r\n        this.parseCommandTree(depth, 0, combinedData).then(() => {\r\n          this.setState({ treeData: this.state.initialTreeData }, () => {\r\n            this.loadLocalCommands();\r\n          });\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err.response);\r\n      });\r\n  };\r\n\r\n  loadLocalCommands = () => {\r\n    axios\r\n      .get(`/CLI/Az/${this.state.repoName}/Modules/${this.state.moduleName}`)\r\n      .then((res) => {\r\n        this.setState({ toBeGenerated: res.data[\"profiles\"] }, () => {\r\n          const selectedNodes = this.state.treeData\r\n            .filter((node) => node.data!.type === \"Command\")\r\n            .filter((node) => this.isGenerated(node));\r\n          this.setState({ selectedNodes: selectedNodes });\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err.response);\r\n      });\r\n  };\r\n\r\n  parseCommandTree = (\r\n    depth: number,\r\n    parentIndex: number,\r\n    commandGroups?: CommandGroups\r\n  ) => {\r\n    if (!commandGroups) {\r\n      return Promise.resolve();\r\n    }\r\n    let totalPromise: Promise<any>[] = Object.keys(commandGroups).map(\r\n      (groupName) => {\r\n        this.setState({ currentIndex: this.state.currentIndex + 1 });\r\n        let treeNode: NodeModel<CheckData> = {\r\n          id: this.state.currentIndex,\r\n          parent: parentIndex,\r\n          text: groupName,\r\n          droppable: true,\r\n          data: { type: \"CommandGroup\", versions: [], versionIndex: -1 },\r\n        };\r\n        this.state.initialTreeData.push(treeNode);\r\n        let commandGroupIndex = this.state.currentIndex;\r\n        let commandGroupPromise: Promise<any> = this.parseCommandTree(\r\n          depth + 1,\r\n          this.state.currentIndex,\r\n          commandGroups[groupName][\"commandGroups\"]\r\n        );\r\n\r\n        let commands = commandGroups[groupName][\"commands\"];\r\n        if (!commands) {\r\n          return commandGroupPromise;\r\n        }\r\n        // eslint-disable-next-line array-callback-return\r\n        let commandPromises = Object.keys(commands).map((commandName) => {\r\n          this.setState({ currentIndex: this.state.currentIndex + 1 });\r\n          let versions: string[] = [];\r\n          const versionList = commands![commandName][\"versions\"];\r\n          versionList.map((version) => versions.push(version[\"name\"]));\r\n          let treeNode: NodeModel<CheckData> = {\r\n            id: this.state.currentIndex,\r\n            parent: commandGroupIndex,\r\n            text: commandName,\r\n            droppable: false,\r\n            data: {\r\n              type: \"Command\",\r\n              versions: versions,\r\n              versionIndex: 0,\r\n            },\r\n          };\r\n          this.state.initialTreeData.push(treeNode);\r\n        });\r\n        return Promise.all([commandGroupPromise, ...commandPromises]);\r\n      }\r\n    );\r\n    return Promise.all(totalPromise);\r\n  };\r\n\r\n  getNamePath = (node: NodeModel<CheckData>) => {\r\n    let namePath = [node.text];\r\n    let currentId = node.parent;\r\n    while (currentId !== 0) {\r\n      const currNode = this.state.treeData[Number(currentId) - 1];\r\n      namePath.unshift(currNode.text);\r\n      currentId = currNode.parent;\r\n    }\r\n    return namePath.slice(1);\r\n  };\r\n\r\n  getProfileEntry = () => {\r\n    const profileName = this.state.profiles[this.state.profileIndex];\r\n    return this.state.toBeGenerated[profileName];\r\n  };\r\n\r\n  isGenerated = (node: NodeModel<CheckData>) => {\r\n    const namePath = this.getNamePath(node);\r\n    let currentPointer = this.getProfileEntry();\r\n    try {\r\n      namePath.slice(0, -1).forEach((item) => {\r\n        currentPointer = currentPointer[\"commandGroups\"]![item];\r\n      });\r\n      const versionName = currentPointer[\"commands\"]![node.text][\"version\"];\r\n      node.data!.versionIndex = node.data!.versions.indexOf(versionName);\r\n    } catch (e: unknown) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  refreshVersionInfo = () => {\r\n    this.state.treeData.forEach((node) => {\r\n      node.data!.versionIndex = 0;\r\n    });\r\n  };\r\n\r\n  async prepareNodes(namePath: string[]) {\r\n    let currentPointer = this.getProfileEntry();\r\n    for (let idx = 0; idx < namePath.length - 1; idx++) {\r\n      const name = namePath[idx];\r\n      const currentPath = namePath.slice(0, idx + 1).join(\"/\");\r\n      await axios\r\n        .post(`/CLI/Az/AAZ/Specs/CommandTree/Nodes/aaz/${currentPath}/Transfer`)\r\n        // eslint-disable-next-line no-loop-func\r\n        .then((res) => {\r\n          const data = res.data;\r\n          if (!currentPointer.hasOwnProperty(\"commandGroups\")) {\r\n            let element: Nodes = {};\r\n            element[name] = data;\r\n            currentPointer[\"commandGroups\"] = element;\r\n            currentPointer = currentPointer[\"commandGroups\"][name];\r\n          } else {\r\n            if (!currentPointer[\"commandGroups\"]!.hasOwnProperty(name)) {\r\n              let element: Nodes = currentPointer[\"commandGroups\"]!;\r\n              element[name] = data;\r\n              currentPointer[\"commandGroups\"] = element;\r\n              currentPointer = currentPointer[\"commandGroups\"][name];\r\n            } else {\r\n              currentPointer = currentPointer[\"commandGroups\"]![name];\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }\r\n\r\n  insertLeaf = (path: string, command: string, version: string) => {\r\n    let currentPointer = this.getProfileEntry();\r\n    path.split(\"/\").forEach((name) => {\r\n      currentPointer = currentPointer[\"commandGroups\"]![name];\r\n    });\r\n    axios\r\n      .post(\r\n        `/CLI/Az/AAZ/Specs/CommandTree/Nodes/aaz/${path}/Leaves/${command}/Versions/${version}/Transfer`\r\n      )\r\n      .then((res) => {\r\n        const data = res.data;\r\n        if (!currentPointer.hasOwnProperty(\"commands\")) {\r\n          let element: Leaves = {};\r\n          element[command] = data;\r\n          currentPointer[\"commands\"] = element;\r\n        } else {\r\n          let element: Leaves = currentPointer[\"commands\"]!;\r\n          element[command] = data;\r\n          currentPointer[\"commands\"] = element;\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  removeNodes = (namePath: string[]) => {\r\n    const nodeName = namePath[namePath.length - 1];\r\n    let currentPointer = this.getProfileEntry();\r\n    namePath.slice(0, -1).forEach((name) => {\r\n      currentPointer = currentPointer[\"commandGroups\"]![name];\r\n    });\r\n    delete currentPointer[\"commandGroups\"]![nodeName];\r\n    if (Object.keys(currentPointer[\"commandGroups\"]!).length === 0) {\r\n      delete currentPointer[\"commandGroups\"];\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  handleBackToHomepage = () => {\r\n    window.location.href = `/?#/generation`;\r\n  };\r\n\r\n  handleGenerate = () => {\r\n    this.setState({ showGenerateDialog: true });\r\n  };\r\n\r\n  handleGenerationClose = (generated: boolean) => {\r\n    this.setState({ showGenerateDialog: false });\r\n  };\r\n\r\n  handleProfileChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    this.setState({ profileIndex: newValue }, () => {\r\n      this.refreshVersionInfo();\r\n      const selectedNodes = this.state.treeData\r\n        .filter((node) => node.data!.type === \"Command\")\r\n        .filter((node) => this.isGenerated(node));\r\n      this.setState({ selectedNodes: selectedNodes });\r\n    });\r\n  };\r\n\r\n  handleSelect = (node: NodeModel<CheckData>) => {\r\n    const currentNode = this.state.selectedNodes.find((n) => n.id === node.id);\r\n    if (!currentNode) {\r\n      this.state.selectedNodes.push(node);\r\n      const namePath = this.getNamePath(node);\r\n      this.prepareNodes(namePath).then(() => {\r\n        const path = namePath.slice(0, -1).join(\"/\");\r\n        const currentNode = this.state.treeData[Number(node.id) - 1];\r\n        const versionIndex = currentNode.data!.versionIndex;\r\n        const version = btoa(currentNode.data!.versions[versionIndex]);\r\n        this.insertLeaf(path, node.text, version);\r\n      });\r\n    } else {\r\n      this.setState({\r\n        selectedNodes: this.state.selectedNodes.filter((n) => n.id !== node.id),\r\n      });\r\n      const namePath = this.getNamePath(node);\r\n      let currentPointer = this.getProfileEntry();\r\n      namePath.slice(0, -1).forEach((name) => {\r\n        currentPointer = currentPointer[\"commandGroups\"]![name];\r\n      });\r\n      delete currentPointer[\"commands\"]![node.text];\r\n\r\n      if (Object.keys(currentPointer[\"commands\"]!).length === 0) {\r\n        delete currentPointer[\"commands\"];\r\n        for (let idx = namePath.length - 1; idx > 0; idx--) {\r\n          if (!this.removeNodes(namePath.slice(0, idx))) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleVersionChange = (node: NodeModel<CheckData>, currentVersion: string) => {\r\n    let changeNode = this.state.treeData[Number(node.id) - 1];\r\n    changeNode.data!.versionIndex = changeNode.data!.versions.indexOf(currentVersion);\r\n    const namePath = this.getNamePath(node);\r\n    let currentPointer = this.getProfileEntry();\r\n    namePath.slice(0, -1).forEach((name) => {\r\n      currentPointer = currentPointer[\"commandGroups\"]![name];\r\n    });\r\n    delete currentPointer[\"commands\"]![node.text]\r\n    const path = namePath.slice(0, -1).join(\"/\");\r\n    const version = btoa(currentVersion)\r\n    this.insertLeaf(path, node.text, version);\r\n  };\r\n\r\n  render() {\r\n    const { moduleName, showGenerateDialog } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <GenerationModuleEditorToolBar\r\n          moduleName={moduleName}\r\n          onHomePage={this.handleBackToHomepage}\r\n          onGenerate={this.handleGenerate}\r\n        />\r\n        <Box sx={{ display: \"flex\" }}>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            sx={{\r\n              width: 300,\r\n              flexShrink: 0,\r\n              [`& .MuiDrawer-paper`]: { width: 300, boxSizing: \"border-box\" },\r\n            }}\r\n          >\r\n            <Toolbar />\r\n            <GenerationProfileTab\r\n              value={this.state.profileIndex}\r\n              profiles={this.state.profiles}\r\n              onChange={this.handleProfileChange}\r\n            />\r\n          </Drawer>\r\n          <Box\r\n            component=\"main\"\r\n            sx={{\r\n              flexGrow: 1,\r\n              p: 1,\r\n            }}\r\n          >\r\n            <Toolbar sx={{ flexShrink: 0 }} />\r\n            {this.state.treeData.length !== 0 && (\r\n              <GenerationCommandTree\r\n                treeData={this.state.treeData}\r\n                selectedNodes={this.state.selectedNodes}\r\n                onSelect={this.handleSelect}\r\n                onChange={this.handleVersionChange}\r\n              />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n        {showGenerateDialog && (\r\n          <GenerationModuleEditorDialog\r\n            url={`/CLI/Az/${this.state.repoName}/Modules/${this.state.moduleName}`}\r\n            data={{ profiles: this.state.toBeGenerated }}\r\n            open={true}\r\n            onClose={this.handleGenerationClose}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction GenerationModuleEditorDialog(props: {\r\n  url: string;\r\n  data: any;\r\n  open: boolean;\r\n  onClose: (generated: boolean) => void;\r\n}) {\r\n  const [updating, setUpdating] = React.useState<boolean>(false);\r\n  const [invalidText, setInvalidText] = React.useState<string | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const handleClose = () => {\r\n    props.onClose(false);\r\n  };\r\n\r\n  const handleGenerate = () => {\r\n    setUpdating(true);\r\n    axios\r\n      .put(props.url, props.data)\r\n      .then(() => {\r\n        setUpdating(false);\r\n        props.onClose(true);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err.response);\r\n        if (err.resource?.message) {\r\n          setInvalidText(`ResponseError: ${err.resource!.message!}`);\r\n        }\r\n        setUpdating(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Dialog disableEscapeKeyDown open={props.open}>\r\n      <DialogTitle>Generate CLI commands to local disk</DialogTitle>\r\n      <DialogContent>\r\n        {invalidText && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            {\" \"}\r\n            {invalidText}{\" \"}\r\n          </Alert>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {updating && (\r\n          <Box sx={{ width: \"100%\" }}>\r\n            <LinearProgress color=\"info\" />\r\n          </Box>\r\n        )}\r\n        {!updating && (\r\n          <React.Fragment>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n            <Button onClick={handleGenerate}>Confirm</Button>\r\n          </React.Fragment>\r\n        )}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst GenerationModuleEditorWrapper = (props: any) => {\r\n  const params = useParams();\r\n  return <GenerationModuleEditor params={params} {...props} />;\r\n};\r\n\r\nexport { GenerationModuleEditorWrapper as GenerationModuleEditor };\r\n","import * as React from 'react';\r\nimport withRoot from '../../withRoot';\r\nimport { Outlet } from 'react-router';\r\nimport { AppAppBar } from '../../components/AppAppBar';\r\n\r\n\r\nclass DocumentsPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <AppAppBar pageName={'Documents'} />\r\n                <Outlet />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRoot(DocumentsPage);\r\n","import * as React from 'react';\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport TreeItem from '@mui/lab/TreeItem';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\n\r\n\r\ninterface DocumentTreeNode {\r\n    id: string\r\n    title: string\r\n    file?: string\r\n    nodes?: DocumentTreeNode[]\r\n}\r\n\r\ninterface ResponseDocumentTreeNode {\r\n    id: string\r\n    title: string\r\n    file?: string\r\n    pages?: ResponseDocumentTreeNode[]\r\n}\r\n\r\ninterface DocumentsTreeProps {\r\n    nodes: DocumentTreeNode[]\r\n    expanded: string[]\r\n    selected: string\r\n    onSelected: (docId: string) => void\r\n}\r\n\r\nclass DocumentsTree extends React.Component<DocumentsTreeProps> {\r\n    onNodeSelected = (event: React.SyntheticEvent, nodeIds: string[] | string) => {\r\n        if (typeof nodeIds === 'string') {\r\n            this.props.onSelected(nodeIds);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const renderNode = (node: DocumentTreeNode) => {\r\n            const title = node.title;\r\n            return (\r\n                <TreeItem key={node.id} nodeId={node.id} label={title} color='inherit'>\r\n                    {Array.isArray(node.nodes) ? node.nodes.map((subNode) => renderNode(subNode)) : null}\r\n                </TreeItem>\r\n            )\r\n        }\r\n\r\n        return (<TreeView\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n            onNodeSelect={this.onNodeSelected}\r\n            selected={this.props.selected}\r\n            expanded={this.props.expanded}\r\n            sx={{\r\n                flexGrow: 1,\r\n                overflowY: 'auto',\r\n                p: 3\r\n            }}\r\n        >\r\n            {this.props.nodes.map((node) => renderNode(node))}\r\n        </TreeView>\r\n        )\r\n    }\r\n}\r\n\r\nconst DecodeResponseDocumentTreeNode = (node: ResponseDocumentTreeNode): DocumentTreeNode => {\r\n    return {\r\n        id: node.id,\r\n        title: node.title,\r\n        file: node.file,\r\n        nodes: node.pages?.map(e => DecodeResponseDocumentTreeNode(e)),\r\n    }\r\n}\r\n\r\nexport default DocumentsTree;\r\n\r\nexport type {DocumentTreeNode, ResponseDocumentTreeNode};\r\n\r\nexport {DecodeResponseDocumentTreeNode};\r\n","import * as React from 'react';\r\nimport { Box, Drawer, Toolbar, Container, Card, Typography, TypographyProps, styled, TableRow, TableCell, Table, TableContainer, TableHead, Link } from '@mui/material';\r\nimport axios from 'axios';\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nimport { useParams } from 'react-router';\r\nimport DocumentsTree, { DecodeResponseDocumentTreeNode, DocumentTreeNode, ResponseDocumentTreeNode } from './DocumentsTree';\r\nimport { CodeProps, HeadingProps, UnorderedListProps } from 'react-markdown/lib/ast-to-react';\r\nimport { Prism } from 'react-syntax-highlighter'\r\nimport { okaidia as prismStyle } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\nimport remarkGfm from 'remark-gfm';\r\n\r\nconst drawerWidth = 300;\r\n\r\nfunction DocumentsDisplay(props: {\r\n    params: {\r\n        docId?: string\r\n    }\r\n}) {\r\n    const [selected, setSelected] = React.useState<string | undefined>(undefined);\r\n    const [documentTree, setDocumentTree] = React.useState<DocumentTreeNode[]>([]);\r\n    const [markDownContent, setMarkDownContent] = React.useState<string | undefined>(undefined);\r\n    const [expanded, setExpanded] = React.useState<string[]>([]);\r\n\r\n    const loadDocument = (nodeId: string) => {\r\n        axios.get(`/Docs/Index/${nodeId}`)\r\n            .then(res => {\r\n                if (res.status === 204) {\r\n                    return\r\n                }\r\n                const content = res.data;\r\n                setMarkDownContent(content);\r\n            }).catch(err => console.error(err.response));\r\n    }\r\n\r\n    const handleTreeSelect = (nodeId: string) => {\r\n        setSelected(nodeId);\r\n        loadDocument(nodeId);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (props.params.docId) {\r\n            handleTreeSelect(props.params.docId);\r\n        }\r\n    }, [props.params.docId])\r\n\r\n\r\n    const loadDocumentIndex = async () => {\r\n        try {\r\n            const res = await axios.get('/Docs/Index');\r\n            const pages: ResponseDocumentTreeNode[] = res.data;\r\n            const dt: DocumentTreeNode[] = pages.map(e => DecodeResponseDocumentTreeNode(e));\r\n            return dt\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        loadDocumentIndex().then((dt) => {\r\n            if (dt) {\r\n                const expandedIds: string[] = [];\r\n                const iterNode = (node: DocumentTreeNode) => {\r\n                    if (node.nodes) {\r\n                        expandedIds.push(node.id);\r\n                        node.nodes.forEach(subNode => iterNode(subNode));\r\n                    }\r\n                }\r\n                dt.forEach(subNode => iterNode(subNode));\r\n                setDocumentTree(dt);\r\n                setExpanded(expandedIds);\r\n                if (!props.params.docId && dt.length > 0) {\r\n                    handleTreeSelect(dt[0].id);\r\n                }\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box sx={{ display: 'flex' }}>\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    sx={{\r\n                        width: drawerWidth,\r\n                        flexShrink: 0,\r\n                        [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\r\n                        zIndex: (theme) => theme.zIndex.appBar - 1\r\n                    }}\r\n                >\r\n                    <Toolbar />\r\n                    {selected && documentTree.length > 0 && <DocumentsTree\r\n                        nodes={documentTree}\r\n                        selected={selected}\r\n                        onSelected={handleTreeSelect}\r\n                        expanded={expanded}\r\n                    />}\r\n                </Drawer>\r\n\r\n                <Container sx={{\r\n                    flexGrow: 1,\r\n                }}>\r\n                    <Toolbar sx={{ flexShrink: 0 }} />\r\n                    <Box sx={{ pt: 4, pb: 20 }}>\r\n                        {markDownContent && <ReactMarkdown\r\n                            children={markDownContent}\r\n                            remarkPlugins={[remarkGfm]}\r\n                            components={{\r\n                                p: (props) => {\r\n                                    return (<Box sx={{ mt: 2 }}>\r\n                                        <PComponent>{props.children}</PComponent>\r\n                                    </Box>)\r\n                                },\r\n                                h1: (props: React.PropsWithChildren<HeadingProps>) => {\r\n                                    return (<Box sx={{\r\n                                        display: \"flex\", alignItems: \"center\", justifyContent: \"center\",\r\n                                        mt: 2,\r\n                                        mb: 2,\r\n                                    }}>\r\n                                        <H1Component>{props.children}</H1Component>\r\n                                    </Box>)\r\n                                },\r\n                                h2: (props: React.PropsWithChildren<HeadingProps>) => {\r\n                                    return (<Box sx={{ mt: 6, mb: 2 }}><H2Component>{props.children}</H2Component></Box>)\r\n                                },\r\n                                h3: (props: React.PropsWithChildren<HeadingProps>) => {\r\n                                    return (<Box sx={{ mt: 4, mb: 4 }}><H3Component>{props.children}</H3Component></Box>)\r\n                                },\r\n                                ul: (props: React.PropsWithChildren<UnorderedListProps>) => {\r\n                                    return (<Box sx={{ listStyleType: props.depth < 1 ? \"disc\" : \"circle\", p: 1, ml: 4 }}>{props.children}</Box>)\r\n                                },\r\n                                li: (props) => {\r\n                                    return (<Typography component=\"li\"\r\n                                        fontSize={15}\r\n                                        fontWeight={600}\r\n                                    >{props.children}</Typography>)\r\n                                },\r\n                                code: (props: React.PropsWithChildren<CodeProps>) => {\r\n                                    const match = /language-(\\w+)/.exec(props.className || '')\r\n                                    if (!props.inline && match) {\r\n                                        return (\r\n                                            <Card variant=\"outlined\" sx={{ mt: 3, ml: 2, mr: 2, paddingLeft: 1, paddingRight: 1 }}>\r\n                                                <Prism\r\n                                                    style={prismStyle}\r\n                                                    language={match[1]}\r\n                                                    PreTag=\"div\"\r\n                                                    children={props.children}\r\n                                                />\r\n                                            </Card>\r\n                                        )\r\n                                    } else {\r\n                                        return (<code className={props.className} {...props} />)\r\n                                    }\r\n                                },\r\n                                img: (props) => {\r\n                                    return (\r\n                                        <Box component='span' sx={{\r\n                                            display: \"flex\",\r\n                                            alignItems: \"center\",\r\n                                            justifyContent: \"center\",\r\n                                            mt: 2, mb: 2, ml: 2, p: 2,\r\n                                        }}>\r\n                                            <img alt={props.alt} src={props.src} title={props.title} style={{ maxWidth: \"95%\" }} />\r\n                                        </Box>\r\n                                    )\r\n                                },\r\n                                table: (props) => {\r\n                                    return (\r\n                                        <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", p: 2 }}>\r\n                                            <TableContainer component={Card} variant='outlined'>\r\n                                                <Table sx={{ minWidth: 400 }}>{props.children}</Table>\r\n                                            </TableContainer>\r\n                                        </Box>\r\n                                    )\r\n                                },\r\n                                thead: (props) => {\r\n                                    return (<TableHead>\r\n                                        {props.children}\r\n                                    </TableHead>)\r\n                                },\r\n                                tr: (props) => {\r\n                                    return (<TableRow sx={{ '&:last-child td': { border: 0 } }}>{props.children}</TableRow>)\r\n                                },\r\n                                th: (props) => {\r\n                                    return (<TableCell>{props.children}</TableCell>)\r\n                                },\r\n                                td: (props) => {\r\n                                    return (<TableCell>{props.children}</TableCell>)\r\n                                },\r\n                                a: (props) => {\r\n                                    return (<Link href={props.href}>{props.children}</Link>)\r\n                                }\r\n                            }}\r\n                        />}\r\n                    </Box>\r\n                </Container>\r\n            </Box>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst H1Component = styled(Typography)<TypographyProps>(({ theme }) => ({\r\n    color: theme.palette.primary.main,\r\n    fontFamily: \"'Work Sans', sans-serif\",\r\n    fontSize: 36,\r\n    fontWeight: 600,\r\n}))\r\n\r\nconst H2Component = styled(Typography)<TypographyProps>(({ theme }) => ({\r\n    color: theme.palette.primary.main,\r\n    fontFamily: \"'Work Sans', sans-serif\",\r\n    fontSize: 20,\r\n    fontWeight: 600,\r\n    marginTop: 16,\r\n}))\r\n\r\nconst H3Component = styled(Typography)<TypographyProps>(({ theme }) => ({\r\n    color: theme.palette.primary.main,\r\n    fontFamily: \"'Work Sans', sans-serif\",\r\n    fontSize: 18,\r\n    fontWeight: 600,\r\n}))\r\n\r\nconst PComponent = styled(Typography)<TypographyProps>(({ theme }) => ({\r\n    color: theme.palette.primary.main,\r\n    fontFamily: \"'Work Sans', sans-serif\",\r\n    fontSize: 16,\r\n    fontWeight: 400,\r\n}))\r\n\r\n\r\n\r\nconst DocumentsDisplayWrapper = (props: any) => {\r\n    const params = useParams()\r\n    return <DocumentsDisplay params={params} {...props} />\r\n}\r\n\r\nexport { DocumentsDisplayWrapper as DocumentsDisplay };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, HashRouter, Routes, Route } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport HomePage from './views/home/HomePage';\r\nimport WorkspacePage from './views/workspace/WorkspacePage';\r\nimport WorkspaceInstruction from './views/workspace/WorkspaceInstruction';\r\nimport { WSEditor } from './views/workspace/WSEditor';\r\nimport CommandsPage from './views/commands/CommandsPage';\r\nimport GenerationPage from './views/generation/GenerationPage';\r\nimport GenerationInstruction from './views/generation/GenerationInstruction';\r\nimport { GenerationModuleEditor } from './views/generation/GenerationModuleEditor';\r\nimport DocumentsPage from './views/documentation/DocumentsPage';\r\nimport { DocumentsDisplay } from './views/documentation/DocumentsDisplay';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<App />}>\r\n          <Route index element={<HomePage />} />\r\n          <Route path=\"HomePage\" element={<HomePage />} />\r\n          <Route path=\"Workspace\" element={<WorkspacePage />}>\r\n            <Route index element={<WorkspaceInstruction />} />\r\n            <Route path=\"Instruction\" element={<WorkspaceInstruction />} />\r\n            <Route path=\":workspaceName\" element={<WSEditor />} />\r\n          </Route>\r\n          <Route path=\"Commands\" element={<CommandsPage />}>\r\n          </Route>\r\n          <Route path=\"Generation\" element={<GenerationPage />}>\r\n            <Route index element={<GenerationInstruction />} />\r\n            <Route path=\"Instruction\" element={<GenerationInstruction />} >\r\n            </Route>\r\n            <Route path=\":repoName/:moduleName\" element={<GenerationModuleEditor />} />\r\n          </Route>\r\n          <Route path=\"Documents\" element={<DocumentsPage />}>\r\n            <Route index element={<DocumentsDisplay/>} />\r\n            <Route path=\":docId\" element={<DocumentsDisplay/>} />\r\n          </Route>\r\n        </Route>\r\n      </Routes>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}